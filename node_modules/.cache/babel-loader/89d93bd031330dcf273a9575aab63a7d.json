{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useWalletInternal = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst fast_json_stable_stringify_1 = (0, tslib_1.__importDefault)(require(\"fast-json-stable-stringify\"));\n\nconst react_1 = require(\"react\");\n\nconst error_1 = require(\"../error\");\n\nconst providers_1 = require(\"../providers\");\n\nconst useLocalStorageState_1 = require(\"./useLocalStorageState\");\n\nconst useWalletInternal = ({\n  onConnect,\n  onDisconnect,\n  network,\n  endpoint,\n  onError\n}) => {\n  var _a;\n\n  const [walletConfigStr, setWalletConfigStr] = (0, useLocalStorageState_1.useLocalStorageState)(\"use-solana/wallet-config\", null);\n  const walletConfig = (0, react_1.useMemo)(() => {\n    try {\n      return walletConfigStr ? JSON.parse(walletConfigStr) : null;\n    } catch (e) {\n      console.warn(\"Error parsing wallet config\", e);\n      return null;\n    }\n  }, [walletConfigStr]);\n  const {\n    walletType,\n    walletArgs\n  } = walletConfig !== null && walletConfig !== void 0 ? walletConfig : {\n    walletType: null,\n    walletArgs: null\n  };\n  const [connected, setConnected] = (0, react_1.useState)(false);\n  const [walletProviderInfo, wallet] = (0, react_1.useMemo)(() => {\n    if (walletType) {\n      const provider = providers_1.WALLET_PROVIDERS[walletType];\n      console.debug(\"New wallet\", provider.url, network);\n      return [provider, new provider.makeAdapter(provider.url, endpoint)];\n    }\n\n    return [undefined, undefined];\n  }, [walletType, network, endpoint]);\n  (0, react_1.useEffect)(() => {\n    if (wallet && walletProviderInfo) {\n      setTimeout(() => {\n        void wallet.connect(walletArgs).catch(e => {\n          onError(new error_1.WalletAutomaticConnectionError(e, walletProviderInfo));\n        });\n      }, 500);\n      wallet.on(\"connect\", () => {\n        if (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) {\n          setConnected(true);\n          onConnect(wallet, walletProviderInfo);\n        }\n      });\n      wallet.on(\"disconnect\", () => {\n        setConnected(false);\n        onDisconnect(wallet, walletProviderInfo);\n      });\n    }\n\n    return () => {\n      if (wallet && wallet.connected) {\n        const disconnect = wallet.disconnect();\n\n        if (disconnect) {\n          disconnect.catch(e => {\n            onError(new error_1.WalletDisconnectError(e, walletProviderInfo));\n          });\n        }\n      }\n    };\n  }, [onConnect, onDisconnect, onError, wallet, walletArgs, walletProviderInfo]);\n  const activate = (0, react_1.useCallback)((nextWalletType, nextWalletArgs) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    const nextWalletConfigStr = (0, fast_json_stable_stringify_1.default)({\n      walletType: nextWalletType,\n      walletArgs: nextWalletArgs !== null && nextWalletArgs !== void 0 ? nextWalletArgs : null\n    });\n\n    if (walletConfigStr === nextWalletConfigStr) {\n      // reconnect\n      try {\n        yield wallet === null || wallet === void 0 ? void 0 : wallet.connect(nextWalletArgs);\n      } catch (e) {\n        onError(new error_1.WalletActivateError(e, nextWalletType, nextWalletArgs));\n      }\n    }\n\n    setWalletConfigStr(nextWalletConfigStr);\n  }), [onError, setWalletConfigStr, wallet, walletConfigStr]);\n  const disconnect = (0, react_1.useCallback)(() => {\n    wallet === null || wallet === void 0 ? void 0 : wallet.disconnect();\n    setWalletConfigStr(null);\n  }, [setWalletConfigStr, wallet]);\n  return {\n    wallet,\n    walletProviderInfo,\n    connected,\n    publicKey: (_a = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) !== null && _a !== void 0 ? _a : undefined,\n    activate,\n    disconnect\n  };\n};\n\nexports.useWalletInternal = useWalletInternal;","map":{"version":3,"sources":["../../src/utils/useWalletInternal.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useWalletInternal = void 0;\nconst tslib_1 = require(\"tslib\");\nconst fast_json_stable_stringify_1 = (0, tslib_1.__importDefault)(require(\"fast-json-stable-stringify\"));\nconst react_1 = require(\"react\");\nconst error_1 = require(\"../error\");\nconst providers_1 = require(\"../providers\");\nconst useLocalStorageState_1 = require(\"./useLocalStorageState\");\nconst useWalletInternal = ({ onConnect, onDisconnect, network, endpoint, onError, }) => {\n    var _a;\n    const [walletConfigStr, setWalletConfigStr] = (0, useLocalStorageState_1.useLocalStorageState)(\"use-solana/wallet-config\", null);\n    const walletConfig = (0, react_1.useMemo)(() => {\n        try {\n            return walletConfigStr\n                ? JSON.parse(walletConfigStr)\n                : null;\n        }\n        catch (e) {\n            console.warn(\"Error parsing wallet config\", e);\n            return null;\n        }\n    }, [walletConfigStr]);\n    const { walletType, walletArgs } = walletConfig !== null && walletConfig !== void 0 ? walletConfig : {\n        walletType: null,\n        walletArgs: null,\n    };\n    const [connected, setConnected] = (0, react_1.useState)(false);\n    const [walletProviderInfo, wallet] = (0, react_1.useMemo)(() => {\n        if (walletType) {\n            const provider = providers_1.WALLET_PROVIDERS[walletType];\n            console.debug(\"New wallet\", provider.url, network);\n            return [provider, new provider.makeAdapter(provider.url, endpoint)];\n        }\n        return [undefined, undefined];\n    }, [walletType, network, endpoint]);\n    (0, react_1.useEffect)(() => {\n        if (wallet && walletProviderInfo) {\n            setTimeout(() => {\n                void wallet.connect(walletArgs).catch((e) => {\n                    onError(new error_1.WalletAutomaticConnectionError(e, walletProviderInfo));\n                });\n            }, 500);\n            wallet.on(\"connect\", () => {\n                if (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) {\n                    setConnected(true);\n                    onConnect(wallet, walletProviderInfo);\n                }\n            });\n            wallet.on(\"disconnect\", () => {\n                setConnected(false);\n                onDisconnect(wallet, walletProviderInfo);\n            });\n        }\n        return () => {\n            if (wallet && wallet.connected) {\n                const disconnect = wallet.disconnect();\n                if (disconnect) {\n                    disconnect.catch((e) => {\n                        onError(new error_1.WalletDisconnectError(e, walletProviderInfo));\n                    });\n                }\n            }\n        };\n    }, [\n        onConnect,\n        onDisconnect,\n        onError,\n        wallet,\n        walletArgs,\n        walletProviderInfo,\n    ]);\n    const activate = (0, react_1.useCallback)((nextWalletType, nextWalletArgs) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n        const nextWalletConfigStr = (0, fast_json_stable_stringify_1.default)({\n            walletType: nextWalletType,\n            walletArgs: nextWalletArgs !== null && nextWalletArgs !== void 0 ? nextWalletArgs : null,\n        });\n        if (walletConfigStr === nextWalletConfigStr) {\n            // reconnect\n            try {\n                yield (wallet === null || wallet === void 0 ? void 0 : wallet.connect(nextWalletArgs));\n            }\n            catch (e) {\n                onError(new error_1.WalletActivateError(e, nextWalletType, nextWalletArgs));\n            }\n        }\n        setWalletConfigStr(nextWalletConfigStr);\n    }), [onError, setWalletConfigStr, wallet, walletConfigStr]);\n    const disconnect = (0, react_1.useCallback)(() => {\n        wallet === null || wallet === void 0 ? void 0 : wallet.disconnect();\n        setWalletConfigStr(null);\n    }, [setWalletConfigStr, wallet]);\n    return {\n        wallet,\n        walletProviderInfo,\n        connected,\n        publicKey: (_a = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) !== null && _a !== void 0 ? _a : undefined,\n        activate,\n        disconnect,\n    };\n};\nexports.useWalletInternal = useWalletInternal;\n//# sourceMappingURL=useWalletInternal.js.map"]},"metadata":{},"sourceType":"script"}