{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Coin98Adapter = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst bs58 = (0, tslib_1.__importStar)(require(\"bs58\"));\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\n\nconst types_1 = require(\"../types\");\n\nclass Coin98Adapter extends eventemitter3_1.default {\n  constructor() {\n    super();\n\n    this.connect = () => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      if (this._onProcess) {\n        return;\n      }\n\n      if (window.coin98 === undefined) {\n        throw new Error(\"Coin98 not installed\");\n      }\n\n      this._onProcess = true;\n      yield window.coin98.sol.request({\n        method: \"sol_accounts\"\n      }).then(rawAccounts => {\n        const accounts = rawAccounts;\n\n        if (!accounts[0]) {\n          throw new Error(\"No accounts found.\");\n        }\n\n        this._publicKey = new web3_js_1.PublicKey(accounts[0]);\n        this._connected = true;\n        this.emit(\"connect\", this._publicKey);\n      }).catch(() => {\n        this.disconnect();\n      }).finally(() => {\n        this._onProcess = false;\n      });\n    });\n\n    this._onProcess = false;\n    this._connected = false;\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  signAllTransactions(transactions) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      const result = [];\n\n      for (let i = 0; i < transactions.length; i++) {\n        const transaction = transactions[i];\n\n        if (transaction) {\n          const signed = yield this.signTransaction(transaction);\n          result.push(signed);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  get publicKey() {\n    return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n  }\n\n  signTransaction(transaction) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      if (!window.coin98) {\n        throw new Error(\"Coin98 not found\");\n      }\n\n      const {\n        publicKey,\n        signature\n      } = yield window.coin98.sol.request({\n        method: \"sol_sign\",\n        params: [transaction]\n      });\n      transaction.addSignature(new web3_js_1.PublicKey(publicKey), bs58.decode(signature));\n      return transaction;\n    });\n  }\n\n  disconnect() {\n    var _a;\n\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      (_a = window.coin98) === null || _a === void 0 ? void 0 : _a.sol.disconnect();\n      this.emit(\"disconnect\");\n    }\n  }\n\n}\n\nexports.Coin98Adapter = Coin98Adapter;","map":{"version":3,"sources":["../../../src/adapters/coin98/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin98Adapter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58 = (0, tslib_1.__importStar)(require(\"bs58\"));\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\nconst types_1 = require(\"../types\");\nclass Coin98Adapter extends eventemitter3_1.default {\n    constructor() {\n        super();\n        this.connect = () => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (this._onProcess) {\n                return;\n            }\n            if (window.coin98 === undefined) {\n                throw new Error(\"Coin98 not installed\");\n            }\n            this._onProcess = true;\n            yield window.coin98.sol\n                .request({ method: \"sol_accounts\" })\n                .then((rawAccounts) => {\n                const accounts = rawAccounts;\n                if (!accounts[0]) {\n                    throw new Error(\"No accounts found.\");\n                }\n                this._publicKey = new web3_js_1.PublicKey(accounts[0]);\n                this._connected = true;\n                this.emit(\"connect\", this._publicKey);\n            })\n                .catch(() => {\n                this.disconnect();\n            })\n                .finally(() => {\n                this._onProcess = false;\n            });\n        });\n        this._onProcess = false;\n        this._connected = false;\n    }\n    get connected() {\n        return this._connected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    signAllTransactions(transactions) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const result = [];\n            for (let i = 0; i < transactions.length; i++) {\n                const transaction = transactions[i];\n                if (transaction) {\n                    const signed = yield this.signTransaction(transaction);\n                    result.push(signed);\n                }\n            }\n            return result;\n        });\n    }\n    get publicKey() {\n        return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n    }\n    signTransaction(transaction) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!window.coin98) {\n                throw new Error(\"Coin98 not found\");\n            }\n            const { publicKey, signature } = (yield window.coin98.sol.request({\n                method: \"sol_sign\",\n                params: [transaction],\n            }));\n            transaction.addSignature(new web3_js_1.PublicKey(publicKey), bs58.decode(signature));\n            return transaction;\n        });\n    }\n    disconnect() {\n        var _a;\n        if (this._publicKey) {\n            this._publicKey = undefined;\n            this._connected = false;\n            (_a = window.coin98) === null || _a === void 0 ? void 0 : _a.sol.disconnect();\n            this.emit(\"disconnect\");\n        }\n    }\n}\nexports.Coin98Adapter = Coin98Adapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}