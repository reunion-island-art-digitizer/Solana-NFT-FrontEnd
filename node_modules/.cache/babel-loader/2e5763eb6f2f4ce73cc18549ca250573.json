{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolflareAdapter = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar sol_wallet_adapter_1 = (0, tslib_1.__importDefault)(require(\"@project-serum/sol-wallet-adapter\"));\nvar tiny_invariant_1 = (0, tslib_1.__importDefault)(require(\"tiny-invariant\"));\n\nvar SolflareAdapter = /*#__PURE__*/function (_sol_wallet_adapter_) {\n  _inherits(SolflareAdapter, _sol_wallet_adapter_);\n\n  var _super = _createSuper(SolflareAdapter);\n\n  function SolflareAdapter() {\n    var _this;\n\n    _classCallCheck(this, SolflareAdapter);\n\n    _this = _super.apply(this, arguments);\n\n    _this.signAllTransactions = function (txs) {\n      return (0, tslib_1.__awaiter)(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var ret, i, tx, signedTx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ret = [];\n                i = 0;\n\n              case 2:\n                if (!(i < txs.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                tx = txs[i];\n                (0, tiny_invariant_1.default)(tx, \"tx\");\n                _context.next = 7;\n                return this.signTransaction(tx);\n\n              case 7:\n                signedTx = _context.sent;\n                ret.push(signedTx);\n\n              case 9:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 12:\n                return _context.abrupt(\"return\", ret);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    };\n\n    return _this;\n  }\n\n  return SolflareAdapter;\n}(sol_wallet_adapter_1.default);\n\nexports.SolflareAdapter = SolflareAdapter;","map":{"version":3,"sources":["../../src/adapters/solflare.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,oBAAA,GAAA,CAAA,GAAA,OAAA,CAAA,eAAA,EAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;AAEA,IAAA,gBAAA,GAAA,CAAA,GAAA,OAAA,CAAA,eAAA,EAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;IAEa,e;;;;;AAAb,6BAAA;AAAA;;AAAA;;;;AACW,UAAA,mBAAA,GAAsB,UAC7B,GAD6B;AAAA,aAEH,CAAA,GAAA,OAAA,CAAA,SAAA,iCAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB,gBAAA,GADoB,GACd,EADc;AAEjB,gBAAA,CAFiB,GAEb,CAFa;;AAAA;AAAA,sBAEV,CAAC,GAAG,GAAG,CAAC,MAFE;AAAA;AAAA;AAAA;;AAGlB,gBAAA,EAHkB,GAGb,GAAG,CAAC,CAAD,CAHU;AAIxB,iBAAA,GAAA,gBAAA,CAAA,OAAA,EAAU,EAAV,EAAc,IAAd;AAJwB;AAKP,uBAAM,KAAK,eAAL,CAAqB,EAArB,CAAN;;AALO;AAKlB,gBAAA,QALkB;AAMxB,gBAAA,GAAG,CAAC,IAAJ,CAAS,QAAT;;AANwB;AAEM,gBAAA,CAAC,EAFP;AAAA;AAAA;;AAAA;AAAA,iDAQnB,GARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,EAFG;AAAA,KAAtB;;AADX;AAaC;;;EAboC,oBAAA,CAAA,O;;AAArC,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolflareAdapter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst sol_wallet_adapter_1 = (0, tslib_1.__importDefault)(require(\"@project-serum/sol-wallet-adapter\"));\nconst tiny_invariant_1 = (0, tslib_1.__importDefault)(require(\"tiny-invariant\"));\nclass SolflareAdapter extends sol_wallet_adapter_1.default {\n    constructor() {\n        super(...arguments);\n        this.signAllTransactions = (txs) => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const ret = [];\n            for (let i = 0; i < txs.length; i++) {\n                const tx = txs[i];\n                (0, tiny_invariant_1.default)(tx, \"tx\");\n                const signedTx = yield this.signTransaction(tx);\n                ret.push(signedTx);\n            }\n            return ret;\n        });\n    }\n}\nexports.SolflareAdapter = SolflareAdapter;\n//# sourceMappingURL=solflare.js.map"]},"metadata":{},"sourceType":"script"}