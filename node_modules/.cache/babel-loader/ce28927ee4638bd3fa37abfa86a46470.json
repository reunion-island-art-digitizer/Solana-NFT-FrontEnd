{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useConnectionInternal = void 0;\n\nvar solana_contrib_1 = require(\"@saberhq/solana-contrib\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar react_1 = require(\"react\");\n\nvar useLocalStorageState_1 = require(\"./useLocalStorageState\");\n\nvar makeNetworkConfigMap = function makeNetworkConfigMap(partial) {\n  return Object.entries(solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return Object.assign(Object.assign({}, acc), _defineProperty({}, k, Object.assign(Object.assign({}, v), partial[k])));\n  }, solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP);\n};\n/**\n * Handles the connection to the Solana nodes.\n * @returns\n */\n\n\nvar useConnectionInternal = function useConnectionInternal(_ref3) {\n  var _ref3$defaultNetwork = _ref3.defaultNetwork,\n      defaultNetwork = _ref3$defaultNetwork === void 0 ? \"mainnet-beta\" : _ref3$defaultNetwork,\n      _ref3$networkConfigs = _ref3.networkConfigs,\n      networkConfigs = _ref3$networkConfigs === void 0 ? solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP : _ref3$networkConfigs,\n      _ref3$commitment = _ref3.commitment,\n      commitment = _ref3$commitment === void 0 ? \"recent\" : _ref3$commitment;\n\n  var _ref4 = (0, useLocalStorageState_1.useLocalStorageState)(\"use-solana/network\", defaultNetwork),\n      _ref5 = _slicedToArray(_ref4, 2),\n      network = _ref5[0],\n      setNetwork = _ref5[1];\n\n  var configMap = makeNetworkConfigMap(networkConfigs);\n  var config = configMap[network];\n  var endpoint = config.endpoint,\n      endpointWs = config.endpointWs;\n  var connection = (0, react_1.useMemo)(function () {\n    return new web3_js_1.Connection(endpoint, {\n      commitment: commitment,\n      wsEndpoint: endpointWs\n    });\n  }, [commitment, endpoint, endpointWs]);\n  var sendConnection = (0, react_1.useMemo)(function () {\n    return new web3_js_1.Connection(endpoint, {\n      commitment: commitment,\n      wsEndpoint: endpointWs\n    });\n  }, [commitment, endpoint, endpointWs]);\n  return {\n    connection: connection,\n    sendConnection: sendConnection,\n    network: network,\n    setNetwork: setNetwork,\n    endpoint: endpoint\n  };\n};\n\nexports.useConnectionInternal = useConnectionInternal;","map":{"version":3,"sources":["../../src/utils/useConnectionInternal.ts"],"names":[],"mappings":";;;;;;;;;;;AAKA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAcA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAC3B,OAD2B;AAAA,SAG3B,MAAM,CAAC,OAAP,CAAe,gBAAA,CAAA,0BAAf,EAA2C,MAA3C,CACE,UAAC,GAAD;AAAA;AAAA,QAAO,CAAP;AAAA,QAAU,CAAV;;AAAA,WAAiB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,GADY,CAAA,sBAEd,CAFc,EAED,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACT,CADS,CAAA,EAET,OAAO,CAAC,CAAD,CAFE,CAFC,EAAjB;AAAA,GADF,EAQE,gBAAA,CAAA,0BARF,CAH2B;AAAA,CAA7B;AAoBA;;;AAGG;;;AACI,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,QAKG;AAAA,mCAHtC,cAGsC;AAAA,MAHtC,cAGsC,qCAHrB,cAGqB;AAAA,mCAFtC,cAEsC;AAAA,MAFtC,cAEsC,qCAFrB,gBAAA,CAAA,0BAEqB;AAAA,+BADtC,UACsC;AAAA,MADtC,UACsC,iCADzB,QACyB;;AACtC,cAA8B,CAAA,GAAA,sBAAA,CAAA,oBAAA,EAC5B,oBAD4B,EAE5B,cAF4B,CAA9B;AAAA;AAAA,MAAO,OAAP;AAAA,MAAgB,UAAhB;;AAIA,MAAM,SAAS,GAAG,oBAAoB,CAAC,cAAD,CAAtC;AACA,MAAM,MAAM,GAAG,SAAS,CAAC,OAAD,CAAxB;AACA,MAAQ,QAAR,GAAiC,MAAjC,CAAQ,QAAR;AAAA,MAAkB,UAAlB,GAAiC,MAAjC,CAAkB,UAAlB;AAEA,MAAM,UAAU,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EACjB;AAAA,WACE,IAAI,SAAA,CAAA,UAAJ,CAAe,QAAf,EAAyB;AACvB,MAAA,UAAU,EAAV,UADuB;AAEvB,MAAA,UAAU,EAAE;AAFW,KAAzB,CADF;AAAA,GADiB,EAMjB,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CANiB,CAAnB;AAQA,MAAM,cAAc,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EACrB;AAAA,WACE,IAAI,SAAA,CAAA,UAAJ,CAAe,QAAf,EAAyB;AACvB,MAAA,UAAU,EAAV,UADuB;AAEvB,MAAA,UAAU,EAAE;AAFW,KAAzB,CADF;AAAA,GADqB,EAMrB,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,CANqB,CAAvB;AASA,SAAO;AACL,IAAA,UAAU,EAAV,UADK;AAEL,IAAA,cAAc,EAAd,cAFK;AAGL,IAAA,OAAO,EAAP,OAHK;AAIL,IAAA,UAAU,EAAV,UAJK;AAKL,IAAA,QAAQ,EAAR;AALK,GAAP;AAOD,CAtCM;;AAAM,OAAA,CAAA,qBAAA,GAAqB,qBAArB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useConnectionInternal = void 0;\nconst solana_contrib_1 = require(\"@saberhq/solana-contrib\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst react_1 = require(\"react\");\nconst useLocalStorageState_1 = require(\"./useLocalStorageState\");\nconst makeNetworkConfigMap = (partial) => Object.entries(solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP).reduce((acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: Object.assign(Object.assign({}, v), partial[k]) })), solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP);\n/**\n * Handles the connection to the Solana nodes.\n * @returns\n */\nconst useConnectionInternal = ({ \n// default to mainnet-beta\ndefaultNetwork = \"mainnet-beta\", networkConfigs = solana_contrib_1.DEFAULT_NETWORK_CONFIG_MAP, commitment = \"recent\", }) => {\n    const [network, setNetwork] = (0, useLocalStorageState_1.useLocalStorageState)(\"use-solana/network\", defaultNetwork);\n    const configMap = makeNetworkConfigMap(networkConfigs);\n    const config = configMap[network];\n    const { endpoint, endpointWs } = config;\n    const connection = (0, react_1.useMemo)(() => new web3_js_1.Connection(endpoint, {\n        commitment,\n        wsEndpoint: endpointWs,\n    }), [commitment, endpoint, endpointWs]);\n    const sendConnection = (0, react_1.useMemo)(() => new web3_js_1.Connection(endpoint, {\n        commitment,\n        wsEndpoint: endpointWs,\n    }), [commitment, endpoint, endpointWs]);\n    return {\n        connection,\n        sendConnection,\n        network,\n        setNetwork,\n        endpoint,\n    };\n};\nexports.useConnectionInternal = useConnectionInternal;\n//# sourceMappingURL=useConnectionInternal.js.map"]},"metadata":{},"sourceType":"script"}