{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useProviderInternal = void 0;\n\nvar solana_contrib_1 = require(\"@saberhq/solana-contrib\");\n\nvar react_1 = require(\"react\");\n\nvar useProviderInternal = function useProviderInternal(_ref) {\n  var connection = _ref.connection,\n      _ref$sendConnection = _ref.sendConnection,\n      sendConnection = _ref$sendConnection === void 0 ? connection : _ref$sendConnection,\n      wallet = _ref.wallet,\n      _ref$commitment = _ref.commitment,\n      commitment = _ref$commitment === void 0 ? \"recent\" : _ref$commitment,\n      _ref$confirmOptions = _ref.confirmOptions,\n      confirmOptions = _ref$confirmOptions === void 0 ? solana_contrib_1.DEFAULT_PROVIDER_OPTIONS : _ref$confirmOptions;\n  var provider = (0, react_1.useMemo)(function () {\n    return new solana_contrib_1.SolanaReadonlyProvider(connection, {\n      commitment: commitment\n    });\n  }, [commitment, connection]);\n  var connected = wallet === null || wallet === void 0 ? void 0 : wallet.connected;\n  var publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n  var providerMut = (0, react_1.useMemo)(function () {\n    return wallet && connected && publicKey ? solana_contrib_1.SolanaProvider.load({\n      connection: connection,\n      sendConnection: sendConnection,\n      wallet: wallet,\n      opts: confirmOptions\n    }) : null;\n  }, [wallet, connected, publicKey, connection, sendConnection, confirmOptions]);\n  return {\n    provider: provider,\n    providerMut: providerMut\n  };\n};\n\nexports.useProviderInternal = useProviderInternal;","map":{"version":3,"sources":["../../src/utils/useProviderInternal.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAMA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAyCO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,OAMA;AAAA,MALjC,UAKiC,QALjC,UAKiC;AAAA,iCAJjC,cAIiC;AAAA,MAJjC,cAIiC,oCAJhB,UAIgB;AAAA,MAHjC,MAGiC,QAHjC,MAGiC;AAAA,6BAFjC,UAEiC;AAAA,MAFjC,UAEiC,gCAFpB,QAEoB;AAAA,iCADjC,cACiC;AAAA,MADjC,cACiC,oCADhB,gBAAA,CAAA,wBACgB;AACjC,MAAM,QAAQ,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EACf;AAAA,WACE,IAAI,gBAAA,CAAA,sBAAJ,CAA2B,UAA3B,EAAuC;AACrC,MAAA,UAAU,EAAV;AADqC,KAAvC,CADF;AAAA,GADe,EAKf,CAAC,UAAD,EAAa,UAAb,CALe,CAAjB;AAQA,MAAM,SAAS,GAAG,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,SAA1B;AACA,MAAM,SAAS,GAAG,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,SAA1B;AACA,MAAM,WAAW,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EAClB;AAAA,WACE,MAAM,IAAI,SAAV,IAAuB,SAAvB,GACI,gBAAA,CAAA,cAAA,CAAe,IAAf,CAAoB;AAClB,MAAA,UAAU,EAAV,UADkB;AAElB,MAAA,cAAc,EAAd,cAFkB;AAGlB,MAAA,MAAM,EAAE,MAHU;AAIlB,MAAA,IAAI,EAAE;AAJY,KAApB,CADJ,GAOI,IARN;AAAA,GADkB,EAUlB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,UAA/B,EAA2C,cAA3C,EAA2D,cAA3D,CAVkB,CAApB;AAaA,SAAO;AACL,IAAA,QAAQ,EAAR,QADK;AAEL,IAAA,WAAW,EAAX;AAFK,GAAP;AAID,CAlCM;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useProviderInternal = void 0;\nconst solana_contrib_1 = require(\"@saberhq/solana-contrib\");\nconst react_1 = require(\"react\");\nconst useProviderInternal = ({ connection, sendConnection = connection, wallet, commitment = \"recent\", confirmOptions = solana_contrib_1.DEFAULT_PROVIDER_OPTIONS, }) => {\n    const provider = (0, react_1.useMemo)(() => new solana_contrib_1.SolanaReadonlyProvider(connection, {\n        commitment,\n    }), [commitment, connection]);\n    const connected = wallet === null || wallet === void 0 ? void 0 : wallet.connected;\n    const publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    const providerMut = (0, react_1.useMemo)(() => wallet && connected && publicKey\n        ? solana_contrib_1.SolanaProvider.load({\n            connection,\n            sendConnection,\n            wallet: wallet,\n            opts: confirmOptions,\n        })\n        : null, [wallet, connected, publicKey, connection, sendConnection, confirmOptions]);\n    return {\n        provider,\n        providerMut,\n    };\n};\nexports.useProviderInternal = useProviderInternal;\n//# sourceMappingURL=useProviderInternal.js.map"]},"metadata":{},"sourceType":"script"}