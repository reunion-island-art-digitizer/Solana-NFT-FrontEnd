{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piroi16\\\\Documents\\\\GitHub\\\\Solana-NFT-FrontEnd\\\\src\\\\App.tsx\";\nimport { WalletKitProvider } from \"@gokiprotocol/walletkit\";\nimport { Body } from \"./Body\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const BREAKPOINT_SIZES = [576, 780, 992, 1200];\nconst maxMediaQueries = BREAKPOINT_SIZES.map(bp => `@media (max-width: ${bp}px)`);\nexport const breakpoints = {\n  mobile: maxMediaQueries[0],\n  tablet: maxMediaQueries[1],\n  medium: maxMediaQueries[2]\n};\n\nconst App = () => {\n  return _jsx(WalletKitProvider, {\n    defaultNetwork: \"devnet\",\n    app: {\n      name: \"My App\"\n    },\n    children: _jsx(Body, {})\n  });\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/src/App.tsx"],"names":["WalletKitProvider","Body","BREAKPOINT_SIZES","maxMediaQueries","map","bp","breakpoints","mobile","tablet","medium","App","name"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,yBAAlC;AAEA,SAASC,IAAT,QAAqB,QAArB;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAzB;AAEP,MAAMC,eAAe,GAAGD,gBAAgB,CAACE,GAAjB,CACnBC,EAAD,IAAS,sBAAqBA,EAAG,KADb,CAAxB;AAIA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,MAAM,EAAEJ,eAAe,CAAC,CAAD,CADA;AAEvBK,EAAAA,MAAM,EAAEL,eAAe,CAAC,CAAD,CAFA;AAGvBM,EAAAA,MAAM,EAAEN,eAAe,CAAC,CAAD;AAHA,CAApB;;AAMP,MAAMO,GAAa,GAAG,MAAM;AACxB,SACI,KAAC,iBAAD;AACI,IAAA,cAAc,EAAC,QADnB;AAEI,IAAA,GAAG,EAAE;AACDC,MAAAA,IAAI,EAAE;AADL,KAFT;AAAA,cAMI,KAAC,IAAD;AANJ,IADJ;AAUH,CAXD;;KAAMD,G;AAaN,eAAeA,GAAf","sourcesContent":["import { WalletKitProvider } from \"@gokiprotocol/walletkit\";\r\n\r\nimport { Body } from \"./Body\";\r\n\r\nexport const BREAKPOINT_SIZES = [576, 780, 992, 1200] as const;\r\n\r\nconst maxMediaQueries = BREAKPOINT_SIZES.map(\r\n    (bp) => `@media (max-width: ${bp}px)`\r\n);\r\n\r\nexport const breakpoints = {\r\n    mobile: maxMediaQueries[0],\r\n    tablet: maxMediaQueries[1],\r\n    medium: maxMediaQueries[2],\r\n};\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <WalletKitProvider\r\n            defaultNetwork=\"devnet\"\r\n            app={{\r\n                name: \"My App\",\r\n            }}\r\n        >\r\n            <Body />\r\n        </WalletKitProvider>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}