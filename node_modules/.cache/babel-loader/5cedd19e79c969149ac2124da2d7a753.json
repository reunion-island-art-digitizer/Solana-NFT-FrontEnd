{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SecretKeyAdapter = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar solana_contrib_1 = require(\"@saberhq/solana-contrib\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\n\nvar types_1 = require(\"../types\");\n\nvar SecretKeyAdapter = /*#__PURE__*/function (_eventemitter3_1$defa) {\n  _inherits(SecretKeyAdapter, _eventemitter3_1$defa);\n\n  var _super = _createSuper(SecretKeyAdapter);\n\n  function SecretKeyAdapter() {\n    var _this;\n\n    _classCallCheck(this, SecretKeyAdapter);\n\n    _this = _super.call(this);\n\n    _this.connect = function (args) {\n      var argsTyped = args;\n      var secretKey = argsTyped === null || argsTyped === void 0 ? void 0 : argsTyped.secretKey;\n\n      if (!secretKey || !Array.isArray(secretKey)) {\n        throw new Error(\"Secret key missing.\");\n      }\n\n      _this._wallet = new solana_contrib_1.SignerWallet(web3_js_1.Keypair.fromSecretKey(Uint8Array.from(secretKey)));\n      _this._publicKey = _this._wallet.publicKey;\n      _this._connected = true;\n\n      _this.emit(\"connect\", _this.publicKey);\n\n      return Promise.resolve();\n    };\n\n    _this._connected = false;\n    return _this;\n  }\n\n  _createClass(SecretKeyAdapter, [{\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      var wallet = this._wallet;\n\n      if (!wallet) {\n        return Promise.resolve(transactions);\n      }\n\n      return wallet.signAllTransactions(transactions);\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      var _a;\n\n      return (_a = this._publicKey) !== null && _a !== void 0 ? _a : types_1.DEFAULT_PUBLIC_KEY;\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.resolve(transaction));\n\n              case 3:\n                return _context.abrupt(\"return\", wallet.signTransaction(transaction));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      if (this._wallet) {\n        this._wallet = undefined;\n        this._publicKey = undefined;\n        this._publicKey = undefined;\n        this._connected = false;\n        this.emit(\"disconnect\");\n      }\n    }\n  }]);\n\n  return SecretKeyAdapter;\n}(eventemitter3_1.default);\n\nexports.SecretKeyAdapter = SecretKeyAdapter;","map":{"version":3,"sources":["../../../src/adapters/secret-key/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,CAAA,GAAA,OAAA,CAAA,eAAA,EAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;IAEa,gB;;;;;AAMX,8BAAA;AAAA;;AAAA;;AACE;;AAkCF,UAAA,OAAA,GAAU,UAAC,IAAD,EAAkC;AAC1C,UAAM,SAAS,GAAG,IAAlB;AAKA,UAAM,SAAS,GAAG,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,SAA7B;;AACA,UAAI,CAAC,SAAD,IAAc,CAAC,KAAK,CAAC,OAAN,CAAc,SAAd,CAAnB,EAA6C;AAC3C,cAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,YAAK,OAAL,GAAe,IAAI,gBAAA,CAAA,YAAJ,CACb,SAAA,CAAA,OAAA,CAAQ,aAAR,CAAsB,UAAU,CAAC,IAAX,CAAgB,SAAhB,CAAtB,CADa,CAAf;AAGA,YAAK,UAAL,GAAkB,MAAK,OAAL,CAAa,SAA/B;AACA,YAAK,UAAL,GAAkB,IAAlB;;AACA,YAAK,IAAL,CAAU,SAAV,EAAqB,MAAK,SAA1B;;AACA,aAAO,OAAO,CAAC,OAAR,EAAP;AACD,KAjBD;;AAjCE,UAAK,UAAL,GAAkB,KAAlB;AAFF;AAGC;;;;SAED,eAAa;AACX,aAAO,KAAK,UAAZ;AACD;;;SAED,eAAe;AACb,aAAO,KAAP;AACD;;;WAEM,6BACL,YADK,EACsB;AAE3B,UAAM,MAAM,GAAG,KAAK,OAApB;;AACA,UAAI,CAAC,MAAL,EAAa;AACX,eAAO,OAAO,CAAC,OAAR,CAAgB,YAAhB,CAAP;AACD;;AACD,aAAO,MAAM,CAAC,mBAAP,CAA2B,YAA3B,CAAP;AACD;;;SAED,eAAa;;;AACX,aAAO,CAAA,EAAA,GAAA,KAAK,UAAL,MAAe,IAAf,IAAe,EAAA,KAAA,KAAA,CAAf,GAAe,EAAf,GAAmB,OAAA,CAAA,kBAA1B;AACD;;;WAEK,yBAAgB,WAAhB,EAAwC;;;;;;;AACtC,gBAAA,M,GAAS,KAAK,O;;oBACf,M;;;;;iDACI,OAAO,CAAC,OAAR,CAAgB,WAAhB,C;;;iDAEF,MAAM,CAAC,eAAP,CAAuB,WAAvB,C;;;;;;;;;AACR;;;WAqBD,sBAAU;AACR,UAAI,KAAK,OAAT,EAAkB;AAChB,aAAK,OAAL,GAAe,SAAf;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,UAAL,GAAkB,KAAlB;AACA,aAAK,IAAL,CAAU,YAAV;AACD;AACF;;;;EApEmC,eAAA,CAAA,O;;AAAtC,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SecretKeyAdapter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst solana_contrib_1 = require(\"@saberhq/solana-contrib\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\nconst types_1 = require(\"../types\");\nclass SecretKeyAdapter extends eventemitter3_1.default {\n    constructor() {\n        super();\n        this.connect = (args) => {\n            const argsTyped = args;\n            const secretKey = argsTyped === null || argsTyped === void 0 ? void 0 : argsTyped.secretKey;\n            if (!secretKey || !Array.isArray(secretKey)) {\n                throw new Error(\"Secret key missing.\");\n            }\n            this._wallet = new solana_contrib_1.SignerWallet(web3_js_1.Keypair.fromSecretKey(Uint8Array.from(secretKey)));\n            this._publicKey = this._wallet.publicKey;\n            this._connected = true;\n            this.emit(\"connect\", this.publicKey);\n            return Promise.resolve();\n        };\n        this._connected = false;\n    }\n    get connected() {\n        return this._connected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    signAllTransactions(transactions) {\n        const wallet = this._wallet;\n        if (!wallet) {\n            return Promise.resolve(transactions);\n        }\n        return wallet.signAllTransactions(transactions);\n    }\n    get publicKey() {\n        var _a;\n        return (_a = this._publicKey) !== null && _a !== void 0 ? _a : types_1.DEFAULT_PUBLIC_KEY;\n    }\n    signTransaction(transaction) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (!wallet) {\n                return Promise.resolve(transaction);\n            }\n            return wallet.signTransaction(transaction);\n        });\n    }\n    disconnect() {\n        if (this._wallet) {\n            this._wallet = undefined;\n            this._publicKey = undefined;\n            this._publicKey = undefined;\n            this._connected = false;\n            this.emit(\"disconnect\");\n        }\n    }\n}\nexports.SecretKeyAdapter = SecretKeyAdapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}