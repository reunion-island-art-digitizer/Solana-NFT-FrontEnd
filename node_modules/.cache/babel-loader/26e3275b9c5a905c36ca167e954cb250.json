{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSolana = exports.SolanaProvider = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\n\nvar unstated_next_1 = require(\"unstated-next\");\n\nvar error_1 = require(\"./error\");\n\nvar useConnectionInternal_1 = require(\"./utils/useConnectionInternal\");\n\nvar useProviderInternal_1 = require(\"./utils/useProviderInternal\");\n\nvar useWalletInternal_1 = require(\"./utils/useWalletInternal\");\n\nvar defaultOnConnect = function defaultOnConnect(wallet, provider) {\n  alert(\"Connected to \".concat(provider.name, \" wallet: \").concat(wallet.publicKey.toString()));\n};\n\nvar defaultOnDisconnect = function defaultOnDisconnect(_wallet, provider) {\n  alert(\"Disconnected from \".concat(provider.name, \" wallet\"));\n};\n\nvar defaultOnError = function defaultOnError(err) {\n  if (err.level === error_1.ErrorLevel.WARN) {\n    console.warn(err);\n  } else {\n    console.error(err);\n  }\n};\n/**\n * Provides Solana.\n * @returns\n */\n\n\nvar useSolanaInternal = function useSolanaInternal() {\n  var _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a$onConnect = _a.onConnect,\n      onConnect = _a$onConnect === void 0 ? defaultOnConnect : _a$onConnect,\n      _a$onDisconnect = _a.onDisconnect,\n      onDisconnect = _a$onDisconnect === void 0 ? defaultOnDisconnect : _a$onDisconnect,\n      _a$onError = _a.onError,\n      onError = _a$onError === void 0 ? defaultOnError : _a$onError,\n      connectionArgs = (0, tslib_1.__rest)(_a, [\"onConnect\", \"onDisconnect\", \"onError\"]);\n  var connectionCtx = (0, useConnectionInternal_1.useConnectionInternal)(connectionArgs);\n  var network = connectionCtx.network,\n      endpoint = connectionCtx.endpoint;\n  var walletCtx = (0, useWalletInternal_1.useWalletInternal)({\n    onConnect: onConnect,\n    onDisconnect: onDisconnect,\n    network: network,\n    endpoint: endpoint,\n    onError: onError\n  });\n  var providerCtx = (0, useProviderInternal_1.useProviderInternal)({\n    connection: connectionCtx.connection,\n    wallet: walletCtx.wallet\n  });\n  return Object.assign(Object.assign(Object.assign({}, walletCtx), connectionCtx), providerCtx);\n};\n\nvar Solana = (0, unstated_next_1.createContainer)(useSolanaInternal);\n/**\n * Provides a Solana SDK.\n *\n * Note: ensure that `onConnect` and `onDisconnect` are wrapped in useCallback or are\n * statically defined, otherwise the wallet will keep re-rendering.\n * @returns\n */\n\nvar SolanaProvider = function SolanaProvider(_a) {\n  var children = _a.children,\n      args = (0, tslib_1.__rest)(_a, [\"children\"]);\n  return react_1.default.createElement(Solana.Provider, {\n    initialState: args\n  }, children);\n};\n\nexports.SolanaProvider = SolanaProvider;\n/**\n * Fetches the loaded Solana SDK.\n */\n\nexports.useSolana = Solana.useContainer;","map":{"version":3,"sources":["../src/context.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSolana = exports.SolanaProvider = void 0;\nconst tslib_1 = require(\"tslib\");\nconst react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\nconst unstated_next_1 = require(\"unstated-next\");\nconst error_1 = require(\"./error\");\nconst useConnectionInternal_1 = require(\"./utils/useConnectionInternal\");\nconst useProviderInternal_1 = require(\"./utils/useProviderInternal\");\nconst useWalletInternal_1 = require(\"./utils/useWalletInternal\");\nconst defaultOnConnect = (wallet, provider) => {\n    alert(`Connected to ${provider.name} wallet: ${wallet.publicKey.toString()}`);\n};\nconst defaultOnDisconnect = (_wallet, provider) => {\n    alert(`Disconnected from ${provider.name} wallet`);\n};\nconst defaultOnError = (err) => {\n    if (err.level === error_1.ErrorLevel.WARN) {\n        console.warn(err);\n    }\n    else {\n        console.error(err);\n    }\n};\n/**\n * Provides Solana.\n * @returns\n */\nconst useSolanaInternal = (_a = {}) => {\n    var { onConnect = defaultOnConnect, onDisconnect = defaultOnDisconnect, onError = defaultOnError } = _a, connectionArgs = (0, tslib_1.__rest)(_a, [\"onConnect\", \"onDisconnect\", \"onError\"]);\n    const connectionCtx = (0, useConnectionInternal_1.useConnectionInternal)(connectionArgs);\n    const { network, endpoint } = connectionCtx;\n    const walletCtx = (0, useWalletInternal_1.useWalletInternal)({\n        onConnect,\n        onDisconnect,\n        network,\n        endpoint,\n        onError,\n    });\n    const providerCtx = (0, useProviderInternal_1.useProviderInternal)({\n        connection: connectionCtx.connection,\n        wallet: walletCtx.wallet,\n    });\n    return Object.assign(Object.assign(Object.assign({}, walletCtx), connectionCtx), providerCtx);\n};\nconst Solana = (0, unstated_next_1.createContainer)(useSolanaInternal);\n/**\n * Provides a Solana SDK.\n *\n * Note: ensure that `onConnect` and `onDisconnect` are wrapped in useCallback or are\n * statically defined, otherwise the wallet will keep re-rendering.\n * @returns\n */\nconst SolanaProvider = (_a) => {\n    var { children } = _a, args = (0, tslib_1.__rest)(_a, [\"children\"]);\n    return (react_1.default.createElement(Solana.Provider, { initialState: args }, children));\n};\nexports.SolanaProvider = SolanaProvider;\n/**\n * Fetches the loaded Solana SDK.\n */\nexports.useSolana = Solana.useContainer;\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"script"}