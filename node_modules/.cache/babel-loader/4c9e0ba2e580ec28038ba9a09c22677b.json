{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolongWalletAdapter = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\n\nconst types_1 = require(\"../types\");\n\nclass SolongWalletAdapter extends eventemitter3_1.default {\n  constructor() {\n    super();\n\n    this.connect = () => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      if (this._onProcess) {\n        return;\n      }\n\n      if (window.solong === undefined) {\n        throw new Error(\"Solong not installed\");\n      }\n\n      this._onProcess = true;\n      yield window.solong.selectAccount().then(account => {\n        this._publicKey = new web3_js_1.PublicKey(account);\n        this._connected = true;\n        this.emit(\"connect\", this._publicKey);\n      }).catch(() => {\n        this.disconnect();\n      }).finally(() => {\n        this._onProcess = false;\n      });\n    });\n\n    this._onProcess = false;\n    this._connected = false;\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  signAllTransactions(transactions) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      const solong = window.solong;\n\n      if (!solong) {\n        throw new Error(\"Solong not found\");\n      }\n\n      if (solong.signAllTransactions) {\n        return solong.signAllTransactions(transactions);\n      } else {\n        const result = [];\n\n        for (let i = 0; i < transactions.length; i++) {\n          const transaction = transactions[i];\n\n          if (transaction) {\n            const signed = yield solong.signTransaction(transaction);\n            result.push(signed);\n          }\n        }\n\n        return result;\n      }\n    });\n  }\n\n  get publicKey() {\n    return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n  }\n\n  signTransaction(transaction) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      if (!window.solong) {\n        throw new Error(\"Solong not found\");\n      }\n\n      return window.solong.signTransaction(transaction);\n    });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit(\"disconnect\");\n    }\n  }\n\n}\n\nexports.SolongWalletAdapter = SolongWalletAdapter;","map":{"version":3,"sources":["../../../src/adapters/solong/index.tsx"],"names":[],"mappings":";;;;;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,eAAA,GAAA,CAAA,GAAA,OAAA,CAAA,eAAA,EAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAGA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAa,mBAAb,SAAyC,eAAA,CAAA,OAAzC,CAAqD;AAKnD,EAAA,WAAA,GAAA;AACE;;AA+CF,SAAA,OAAA,GAAU,MAA0B,CAAA,GAAA,OAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClC,UAAI,KAAK,UAAT,EAAqB;AACnB;AACD;;AAED,UAAI,MAAM,CAAC,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,WAAK,UAAL,GAAkB,IAAlB;AACA,YAAM,MAAM,CAAC,MAAP,CACH,aADG,GAEH,IAFG,CAEG,OAAD,IAAY;AAChB,aAAK,UAAL,GAAkB,IAAI,SAAA,CAAA,SAAJ,CAAc,OAAd,CAAlB;AACA,aAAK,UAAL,GAAkB,IAAlB;AACA,aAAK,IAAL,CAAU,SAAV,EAAqB,KAAK,UAA1B;AACD,OANG,EAOH,KAPG,CAOG,MAAK;AACV,aAAK,UAAL;AACD,OATG,EAUH,OAVG,CAUK,MAAK;AACZ,aAAK,UAAL,GAAkB,KAAlB;AACD,OAZG,CAAN;AAaD,KAvBmC,CAApC;;AA9CE,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,KAAlB;AACD;;AAEY,MAAT,SAAS,GAAA;AACX,WAAO,KAAK,UAAZ;AACD;;AAEc,MAAX,WAAW,GAAA;AACb,WAAO,KAAP;AACD;;AAEY,EAAA,mBAAmB,CAC9B,YAD8B,EACH;;AAE3B,YAAM,MAAM,GAAG,MAAM,CAAC,MAAtB;;AACA,UAAI,CAAC,MAAL,EAAa;AACX,cAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACD,UAAI,MAAM,CAAC,mBAAX,EAAgC;AAC9B,eAAO,MAAM,CAAC,mBAAP,CAA2B,YAA3B,CAAP;AACD,OAFD,MAEO;AACL,cAAM,MAAM,GAAkB,EAA9B;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,gBAAM,WAAW,GAAG,YAAY,CAAC,CAAD,CAAhC;;AACA,cAAI,WAAJ,EAAiB;AACf,kBAAM,MAAM,GAAG,MAAM,MAAM,CAAC,eAAP,CAAuB,WAAvB,CAArB;AACA,YAAA,MAAM,CAAC,IAAP,CAAY,MAAZ;AACD;AACF;;AAED,eAAO,MAAP;AACD;AACF,K;AAAA;;AAEY,MAAT,SAAS,GAAA;AACX,WAAO,KAAK,UAAL,IAAmB,OAAA,CAAA,kBAA1B;AACD;;AAEK,EAAA,eAAe,CAAC,WAAD,EAAyB;;AAC5C,UAAI,CAAC,MAAM,CAAC,MAAZ,EAAoB;AAClB,cAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACD,aAAO,MAAM,CAAC,MAAP,CAAc,eAAd,CAA8B,WAA9B,CAAP;AACD,K;AAAA;;AA2BD,EAAA,UAAU,GAAA;AACR,QAAI,KAAK,UAAT,EAAqB;AACnB,WAAK,UAAL,GAAkB,SAAlB;AACA,WAAK,UAAL,GAAkB,KAAlB;AACA,WAAK,IAAL,CAAU,YAAV;AACD;AACF;;AApFkD;;AAArD,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolongWalletAdapter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\nconst types_1 = require(\"../types\");\nclass SolongWalletAdapter extends eventemitter3_1.default {\n    constructor() {\n        super();\n        this.connect = () => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (this._onProcess) {\n                return;\n            }\n            if (window.solong === undefined) {\n                throw new Error(\"Solong not installed\");\n            }\n            this._onProcess = true;\n            yield window.solong\n                .selectAccount()\n                .then((account) => {\n                this._publicKey = new web3_js_1.PublicKey(account);\n                this._connected = true;\n                this.emit(\"connect\", this._publicKey);\n            })\n                .catch(() => {\n                this.disconnect();\n            })\n                .finally(() => {\n                this._onProcess = false;\n            });\n        });\n        this._onProcess = false;\n        this._connected = false;\n    }\n    get connected() {\n        return this._connected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    signAllTransactions(transactions) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const solong = window.solong;\n            if (!solong) {\n                throw new Error(\"Solong not found\");\n            }\n            if (solong.signAllTransactions) {\n                return solong.signAllTransactions(transactions);\n            }\n            else {\n                const result = [];\n                for (let i = 0; i < transactions.length; i++) {\n                    const transaction = transactions[i];\n                    if (transaction) {\n                        const signed = yield solong.signTransaction(transaction);\n                        result.push(signed);\n                    }\n                }\n                return result;\n            }\n        });\n    }\n    get publicKey() {\n        return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n    }\n    signTransaction(transaction) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!window.solong) {\n                throw new Error(\"Solong not found\");\n            }\n            return window.solong.signTransaction(transaction);\n        });\n    }\n    disconnect() {\n        if (this._publicKey) {\n            this._publicKey = undefined;\n            this._connected = false;\n            this.emit(\"disconnect\");\n        }\n    }\n}\nexports.SolongWalletAdapter = SolongWalletAdapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}