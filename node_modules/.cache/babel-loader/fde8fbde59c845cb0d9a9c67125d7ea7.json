{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _toArray = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _classCallCheck = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenAmount = exports.validateU256 = exports.validateU64 = exports.TokenAmountUnderflow = exports.TokenAmountOverflow = void 0;\n\nvar decimal_js_light_1 = __importDefault(require(\"decimal.js-light\"));\n\nvar jsbi_1 = __importDefault(require(\"jsbi\"));\n\nvar tiny_invariant_1 = __importDefault(require(\"tiny-invariant\"));\n\nvar constants_1 = require(\"./constants\");\n\nvar fraction_1 = require(\"./fraction\");\n\nvar percent_1 = require(\"./percent\");\n\nvar utils_1 = require(\"./utils\");\n\nvar TokenAmountOverflow = /*#__PURE__*/function (_RangeError) {\n  _inherits(TokenAmountOverflow, _RangeError);\n\n  var _super = _createSuper(TokenAmountOverflow);\n\n  function TokenAmountOverflow(type, amount) {\n    _classCallCheck(this, TokenAmountOverflow);\n\n    return _super.call(this, \"Token amount overflows \".concat(type, \": \").concat(amount.toString()));\n  }\n\n  return TokenAmountOverflow;\n}( /*#__PURE__*/_wrapNativeSuper(RangeError));\n\nexports.TokenAmountOverflow = TokenAmountOverflow;\n\nvar TokenAmountUnderflow = /*#__PURE__*/function (_RangeError2) {\n  _inherits(TokenAmountUnderflow, _RangeError2);\n\n  var _super2 = _createSuper(TokenAmountUnderflow);\n\n  function TokenAmountUnderflow(amount) {\n    _classCallCheck(this, TokenAmountUnderflow);\n\n    return _super2.call(this, \"Token amount must be greater than zero: \".concat(amount.toString()));\n  }\n\n  return TokenAmountUnderflow;\n}( /*#__PURE__*/_wrapNativeSuper(RangeError));\n\nexports.TokenAmountUnderflow = TokenAmountUnderflow;\n\nfunction validateU64(value) {\n  if (!jsbi_1.default.greaterThanOrEqual(value, constants_1.ZERO)) {\n    throw new TokenAmountUnderflow(value);\n  }\n\n  if (!jsbi_1.default.lessThanOrEqual(value, constants_1.MAX_U64)) {\n    throw new TokenAmountOverflow(\"u64\", value);\n  }\n}\n\nexports.validateU64 = validateU64;\n\nfunction validateU256(value) {\n  if (!jsbi_1.default.greaterThanOrEqual(value, constants_1.ZERO)) {\n    throw new TokenAmountUnderflow(value);\n  }\n\n  if (!jsbi_1.default.lessThanOrEqual(value, constants_1.MAX_U256)) {\n    throw new TokenAmountOverflow(\"u256\", value);\n  }\n}\n\nexports.validateU256 = validateU256;\n\nvar stripTrailingZeroes = function stripTrailingZeroes(num) {\n  var _num$split = num.split(\".\"),\n      _num$split2 = _toArray(_num$split),\n      head = _num$split2[0],\n      tail = _num$split2[1],\n      rest = _num$split2.slice(2);\n\n  if (rest.length > 0 || !head) {\n    console.warn(\"Invalid number passed to stripTrailingZeroes: \".concat(num));\n    return num;\n  }\n\n  if (!tail) {\n    return num;\n  }\n\n  return \"\".concat(head, \".\").concat(tail.replace(/\\.0+$/, \"\"));\n};\n\nvar TokenAmount = /*#__PURE__*/function (_fraction_1$Fraction) {\n  _inherits(TokenAmount, _fraction_1$Fraction);\n\n  var _super3 = _createSuper(TokenAmount);\n\n  // amount _must_ be raw, i.e. in the native representation\n  function TokenAmount(token, amount, validate) {\n    var _this;\n\n    _classCallCheck(this, TokenAmount);\n\n    var parsedAmount = (0, utils_1.parseBigintIsh)(amount);\n    validate === null || validate === void 0 ? void 0 : validate(parsedAmount);\n    _this = _super3.call(this, parsedAmount, (0, utils_1.makeDecimalMultiplier)(token.decimals));\n    _this.token = token;\n    return _this;\n  }\n  /**\n   * Parses a token amount from a decimal representation.\n   * @param token\n   * @param uiAmount\n   * @returns\n   */\n\n\n  _createClass(TokenAmount, [{\n    key: \"raw\",\n    get: function get() {\n      return this.numerator;\n    }\n  }, {\n    key: \"toSignificant\",\n    value: function toSignificant() {\n      var significantDigits = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n      var format = arguments.length > 1 ? arguments[1] : undefined;\n      var rounding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.Rounding.ROUND_DOWN;\n      return _get(_getPrototypeOf(TokenAmount.prototype), \"toSignificant\", this).call(this, significantDigits, format, rounding);\n    }\n  }, {\n    key: \"toFixed\",\n    value: function toFixed() {\n      var decimalPlaces = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.token.decimals;\n      var format = arguments.length > 1 ? arguments[1] : undefined;\n      var rounding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.Rounding.ROUND_DOWN;\n      (0, tiny_invariant_1.default)(decimalPlaces <= this.token.decimals, \"DECIMALS\");\n      return _get(_getPrototypeOf(TokenAmount.prototype), \"toFixed\", this).call(this, decimalPlaces, format, rounding);\n    }\n  }, {\n    key: \"toExact\",\n    value: function toExact() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        groupSeparator: \"\"\n      };\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      fraction_1.Big.DP = this.token.decimals; // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n\n      return new fraction_1.Big(this.numerator).div(this.denominator.toString()).toFormat(format);\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      (0, tiny_invariant_1.default)(this.token.equals(other.token), \"add token mismatch: \".concat(this.token.toString(), \" !== \").concat(other.token.toString()));\n      return new TokenAmount(this.token, jsbi_1.default.add(this.raw, other.raw));\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      (0, tiny_invariant_1.default)(this.token.equals(other.token), \"subtract token mismatch: \".concat(this.token.toString(), \" !== \").concat(other.token.toString()));\n      return new TokenAmount(this.token, jsbi_1.default.subtract(this.raw, other.raw));\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n\n  }, {\n    key: \"divideByAmount\",\n    value: function divideByAmount(other) {\n      (0, tiny_invariant_1.default)(this.token.equals(other.token), \"divideByAmount token mismatch: \".concat(this.token.toString(), \" !== \").concat(other.token.toString()));\n      var frac = this.divide(other);\n      return new percent_1.Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n\n  }, {\n    key: \"divideBy\",\n    value: function divideBy(other) {\n      var frac = this.divide(other);\n      return new percent_1.Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Multiplies this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n\n  }, {\n    key: \"multiplyBy\",\n    value: function multiplyBy(percent) {\n      return new TokenAmount(this.token, percent.asFraction.multiply(this.raw).toFixed(0));\n    }\n    /**\n     * Reduces this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n\n  }, {\n    key: \"reduceBy\",\n    value: function reduceBy(percent) {\n      return this.multiplyBy(new percent_1.Percent(1, 1).subtract(percent));\n    }\n    /**\n     * Formats this number using Intl.NumberFormatOptions\n     * @param param0\n     * @returns\n     */\n\n  }, {\n    key: \"format\",\n    value: function format() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          numberFormatOptions = _ref.numberFormatOptions,\n          locale = _ref.locale;\n\n      var asExactString = this.toFixed(this.token.decimals);\n      var asNumber = parseFloat(asExactString);\n      return \"\".concat(numberFormatOptions !== undefined ? asNumber.toLocaleString(locale, numberFormatOptions) : stripTrailingZeroes(asExactString));\n    }\n    /**\n     * Returns true if the other object is a {@link TokenAmount}.\n     *\n     * @param other\n     * @returns\n     */\n\n  }], [{\n    key: \"parseFromString\",\n    value: function parseFromString(token, uiAmount) {\n      return new TokenAmount(token, jsbi_1.default.BigInt(new decimal_js_light_1.default(uiAmount).times(new decimal_js_light_1.default(10).pow(token.decimals)).toFixed(0)));\n    }\n  }, {\n    key: \"isTokenAmount\",\n    value: function isTokenAmount(other) {\n      var _a;\n\n      return fraction_1.Fraction.isFraction(other) && !!((_a = other) === null || _a === void 0 ? void 0 : _a.token);\n    }\n  }]);\n\n  return TokenAmount;\n}(fraction_1.Fraction);\n\nexports.TokenAmount = TokenAmount;","map":{"version":3,"sources":["../src/tokenAmount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,kBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,mB;;;;;AACX,+BAAY,IAAZ,EAA0B,MAA1B,EAAsC;AAAA;;AAAA,8DACJ,IADI,eACK,MAAM,CAAC,QAAP,EADL;AAErC;;;iCAHsC,U;;AAAzC,OAAA,CAAA,mBAAA,GAAA,mBAAA;;IAMa,oB;;;;;AACX,gCAAY,MAAZ,EAAwB;AAAA;;AAAA,gFAC2B,MAAM,CAAC,QAAP,EAD3B;AAEvB;;;iCAHuC,U;;AAA1C,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAMA,SAAgB,WAAhB,CAA4B,KAA5B,EAAuC;AACrC,MAAI,CAAC,MAAA,CAAA,OAAA,CAAK,kBAAL,CAAwB,KAAxB,EAA+B,WAAA,CAAA,IAA/B,CAAL,EAA2C;AACzC,UAAM,IAAI,oBAAJ,CAAyB,KAAzB,CAAN;AACD;;AACD,MAAI,CAAC,MAAA,CAAA,OAAA,CAAK,eAAL,CAAqB,KAArB,EAA4B,WAAA,CAAA,OAA5B,CAAL,EAA2C;AACzC,UAAM,IAAI,mBAAJ,CAAwB,KAAxB,EAA+B,KAA/B,CAAN;AACD;AACF;;AAPD,OAAA,CAAA,WAAA,GAAA,WAAA;;AASA,SAAgB,YAAhB,CAA6B,KAA7B,EAAwC;AACtC,MAAI,CAAC,MAAA,CAAA,OAAA,CAAK,kBAAL,CAAwB,KAAxB,EAA+B,WAAA,CAAA,IAA/B,CAAL,EAA2C;AACzC,UAAM,IAAI,oBAAJ,CAAyB,KAAzB,CAAN;AACD;;AACD,MAAI,CAAC,MAAA,CAAA,OAAA,CAAK,eAAL,CAAqB,KAArB,EAA4B,WAAA,CAAA,QAA5B,CAAL,EAA4C;AAC1C,UAAM,IAAI,mBAAJ,CAAwB,MAAxB,EAAgC,KAAhC,CAAN;AACD;AACF;;AAPD,OAAA,CAAA,YAAA,GAAA,YAAA;;AAoBA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,GAAD,EAAwB;AAClD,mBAA8B,GAAG,CAAC,KAAJ,CAAU,GAAV,CAA9B;AAAA;AAAA,MAAO,IAAP;AAAA,MAAa,IAAb;AAAA,MAAsB,IAAtB;;AACA,MAAI,IAAI,CAAC,MAAL,GAAc,CAAd,IAAmB,CAAC,IAAxB,EAA8B;AAC5B,IAAA,OAAO,CAAC,IAAR,yDAA8D,GAA9D;AACA,WAAO,GAAP;AACD;;AACD,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,GAAP;AACD;;AACD,mBAAU,IAAV,cAAkB,IAAI,CAAC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAlB;AACD,CAVD;;IAYa,W;;;;;AAGX;AACA,uBACE,KADF,EAEE,MAFF,EAGE,QAHF,EAGkC;AAAA;;AAAA;;AAEhC,QAAM,YAAY,GAAG,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,MAAf,CAArB;AACA,IAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAG,YAAH,CAAR;AAEA,+BAAM,YAAN,EAAoB,CAAA,GAAA,OAAA,CAAA,qBAAA,EAAsB,KAAK,CAAC,QAA5B,CAApB;AACA,UAAK,KAAL,GAAa,KAAb;AANgC;AAOjC;AAED;;;;;AAKG;;;;;SAeH,eAAc;AACZ,aAAO,KAAK,SAAZ;AACD;;;WAEe,yBAG0B;AAAA,UAFxC,iBAEwC,uEAFpB,CAEoB;AAAA,UADxC,MACwC;AAAA,UAAxC,QAAwC,uEAAnB,WAAA,CAAA,QAAA,CAAS,UAAU;AAExC,4FAA2B,iBAA3B,EAA8C,MAA9C,EAAsD,QAAtD;AACD;;;WAEe,mBAG0B;AAAA,UAFxC,aAEwC,uEAFhB,KAAK,KAAL,CAAW,QAEK;AAAA,UADxC,MACwC;AAAA,UAAxC,QAAwC,uEAAnB,WAAA,CAAA,QAAA,CAAS,UAAU;AAExC,OAAA,GAAA,gBAAA,CAAA,OAAA,EAAU,aAAa,IAAI,KAAK,KAAL,CAAW,QAAtC,EAAgD,UAAhD;AACA,sFAAqB,aAArB,EAAoC,MAApC,EAA4C,QAA5C;AACD;;;WAEM,mBAAqD;AAAA,UAA7C,MAA6C,uEAAtB;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAsB;AAC1D;AACA,MAAA,UAAA,CAAA,GAAA,CAAI,EAAJ,GAAS,KAAK,KAAL,CAAW,QAApB,CAF0D,CAG1D;;AACA,aACE,IAAI,UAAA,CAAA,GAAJ,CAAQ,KAAK,SAAb,EAAgD,GAAhD,CACE,KAAK,WAAL,CAAiB,QAAjB,EADF,EAKA,QALA,CAKS,MALT,CADF;AAOD;;;WAEe,aAAI,KAAJ,EAAyB;AACvC,OAAA,GAAA,gBAAA,CAAA,OAAA,EACE,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CADF,gCAEyB,KAAK,KAAL,CAAW,QAAX,EAFzB,kBAEsD,KAAK,CAAC,KAAN,CAAY,QAAZ,EAFtD;AAIA,aAAO,IAAI,WAAJ,CAAgB,KAAK,KAArB,EAA4B,MAAA,CAAA,OAAA,CAAK,GAAL,CAAS,KAAK,GAAd,EAAmB,KAAK,CAAC,GAAzB,CAA5B,CAAP;AACD;;;WAEe,kBAAS,KAAT,EAA8B;AAC5C,OAAA,GAAA,gBAAA,CAAA,OAAA,EACE,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CADF,qCAE8B,KAAK,KAAL,CAAW,QAAX,EAF9B,kBAE2D,KAAK,CAAC,KAAN,CAAY,QAAZ,EAF3D;AAIA,aAAO,IAAI,WAAJ,CAAgB,KAAK,KAArB,EAA4B,MAAA,CAAA,OAAA,CAAK,QAAL,CAAc,KAAK,GAAnB,EAAwB,KAAK,CAAC,GAA9B,CAA5B,CAAP;AACD;AAED;;;;AAIG;;;;WACI,wBAAe,KAAf,EAAoC;AACzC,OAAA,GAAA,gBAAA,CAAA,OAAA,EACE,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CADF,2CAEoC,KAAK,KAAL,CAAW,QAAX,EAFpC,kBAEiE,KAAK,CAAC,KAAN,CAAY,QAAZ,EAFjE;AAIA,UAAM,IAAI,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAb;AACA,aAAO,IAAI,SAAA,CAAA,OAAJ,CAAY,IAAI,CAAC,SAAjB,EAA4B,IAAI,CAAC,WAAjC,CAAP;AACD;AAED;;;;AAIG;;;;WACI,kBAAS,KAAT,EAAwB;AAC7B,UAAM,IAAI,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAb;AACA,aAAO,IAAI,SAAA,CAAA,OAAJ,CAAY,IAAI,CAAC,SAAjB,EAA4B,IAAI,CAAC,WAAjC,CAAP;AACD;AAED;;;;;AAKG;;;;WACI,oBAAW,OAAX,EAA2B;AAChC,aAAO,IAAI,WAAJ,CACL,KAAK,KADA,EAEL,OAAO,CAAC,UAAR,CAAmB,QAAnB,CAA4B,KAAK,GAAjC,EAAsC,OAAtC,CAA8C,CAA9C,CAFK,CAAP;AAID;AAED;;;;;AAKG;;;;WACI,kBAAS,OAAT,EAAyB;AAC9B,aAAO,KAAK,UAAL,CAAgB,IAAI,SAAA,CAAA,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,QAAlB,CAA2B,OAA3B,CAAhB,CAAP;AACD;AAED;;;;AAIG;;;;WACI,kBAAwD;AAAA,qFAAF,EAAE;AAAA,UAA/C,mBAA+C,QAA/C,mBAA+C;AAAA,UAA1B,MAA0B,QAA1B,MAA0B;;AAC7D,UAAM,aAAa,GAAG,KAAK,OAAL,CAAa,KAAK,KAAL,CAAW,QAAxB,CAAtB;AACA,UAAM,QAAQ,GAAG,UAAU,CAAC,aAAD,CAA3B;AACA,uBACE,mBAAmB,KAAK,SAAxB,GACI,QAAQ,CAAC,cAAT,CAAwB,MAAxB,EAAgC,mBAAhC,CADJ,GAEI,mBAAmB,CAAC,aAAD,CAHzB;AAKD;AAED;;;;;AAKG;;;;WAnII,yBACL,KADK,EAEL,QAFK,EAEW;AAEhB,aAAO,IAAI,WAAJ,CACL,KADK,EAEL,MAAA,CAAA,OAAA,CAAK,MAAL,CACE,IAAI,kBAAA,CAAA,OAAJ,CAAY,QAAZ,EACG,KADH,CACS,IAAI,kBAAA,CAAA,OAAJ,CAAY,EAAZ,EAAgB,GAAhB,CAAoB,KAAK,CAAC,QAA1B,CADT,EAEG,OAFH,CAEW,CAFX,CADF,CAFK,CAAP;AAQD;;;WAwHM,uBACL,KADK,EACS;;;AAEd,aACE,UAAA,CAAA,QAAA,CAAS,UAAT,CAAoB,KAApB,KACA,CAAC,EAAC,CAAA,EAAA,GAAC,KAAD,MAA6C,IAA7C,IAA6C,EAAA,KAAA,KAAA,CAA7C,GAA6C,KAAA,CAA7C,GAA6C,EAAA,CAAE,KAAhD,CAFH;AAID;;;;EAjKkD,UAAA,CAAA,Q;;AAArD,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenAmount = exports.validateU256 = exports.validateU64 = exports.TokenAmountUnderflow = exports.TokenAmountOverflow = void 0;\nconst decimal_js_light_1 = __importDefault(require(\"decimal.js-light\"));\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\nconst tiny_invariant_1 = __importDefault(require(\"tiny-invariant\"));\nconst constants_1 = require(\"./constants\");\nconst fraction_1 = require(\"./fraction\");\nconst percent_1 = require(\"./percent\");\nconst utils_1 = require(\"./utils\");\nclass TokenAmountOverflow extends RangeError {\n    constructor(type, amount) {\n        super(`Token amount overflows ${type}: ${amount.toString()}`);\n    }\n}\nexports.TokenAmountOverflow = TokenAmountOverflow;\nclass TokenAmountUnderflow extends RangeError {\n    constructor(amount) {\n        super(`Token amount must be greater than zero: ${amount.toString()}`);\n    }\n}\nexports.TokenAmountUnderflow = TokenAmountUnderflow;\nfunction validateU64(value) {\n    if (!jsbi_1.default.greaterThanOrEqual(value, constants_1.ZERO)) {\n        throw new TokenAmountUnderflow(value);\n    }\n    if (!jsbi_1.default.lessThanOrEqual(value, constants_1.MAX_U64)) {\n        throw new TokenAmountOverflow(\"u64\", value);\n    }\n}\nexports.validateU64 = validateU64;\nfunction validateU256(value) {\n    if (!jsbi_1.default.greaterThanOrEqual(value, constants_1.ZERO)) {\n        throw new TokenAmountUnderflow(value);\n    }\n    if (!jsbi_1.default.lessThanOrEqual(value, constants_1.MAX_U256)) {\n        throw new TokenAmountOverflow(\"u256\", value);\n    }\n}\nexports.validateU256 = validateU256;\nconst stripTrailingZeroes = (num) => {\n    const [head, tail, ...rest] = num.split(\".\");\n    if (rest.length > 0 || !head) {\n        console.warn(`Invalid number passed to stripTrailingZeroes: ${num}`);\n        return num;\n    }\n    if (!tail) {\n        return num;\n    }\n    return `${head}.${tail.replace(/\\.0+$/, \"\")}`;\n};\nclass TokenAmount extends fraction_1.Fraction {\n    // amount _must_ be raw, i.e. in the native representation\n    constructor(token, amount, validate) {\n        const parsedAmount = (0, utils_1.parseBigintIsh)(amount);\n        validate === null || validate === void 0 ? void 0 : validate(parsedAmount);\n        super(parsedAmount, (0, utils_1.makeDecimalMultiplier)(token.decimals));\n        this.token = token;\n    }\n    /**\n     * Parses a token amount from a decimal representation.\n     * @param token\n     * @param uiAmount\n     * @returns\n     */\n    static parseFromString(token, uiAmount) {\n        return new TokenAmount(token, jsbi_1.default.BigInt(new decimal_js_light_1.default(uiAmount)\n            .times(new decimal_js_light_1.default(10).pow(token.decimals))\n            .toFixed(0)));\n    }\n    get raw() {\n        return this.numerator;\n    }\n    toSignificant(significantDigits = 6, format, rounding = constants_1.Rounding.ROUND_DOWN) {\n        return super.toSignificant(significantDigits, format, rounding);\n    }\n    toFixed(decimalPlaces = this.token.decimals, format, rounding = constants_1.Rounding.ROUND_DOWN) {\n        (0, tiny_invariant_1.default)(decimalPlaces <= this.token.decimals, \"DECIMALS\");\n        return super.toFixed(decimalPlaces, format, rounding);\n    }\n    toExact(format = { groupSeparator: \"\" }) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        fraction_1.Big.DP = this.token.decimals;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        return new fraction_1.Big(this.numerator).div(this.denominator.toString()).toFormat(format);\n    }\n    add(other) {\n        (0, tiny_invariant_1.default)(this.token.equals(other.token), `add token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        return new TokenAmount(this.token, jsbi_1.default.add(this.raw, other.raw));\n    }\n    subtract(other) {\n        (0, tiny_invariant_1.default)(this.token.equals(other.token), `subtract token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        return new TokenAmount(this.token, jsbi_1.default.subtract(this.raw, other.raw));\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n    divideByAmount(other) {\n        (0, tiny_invariant_1.default)(this.token.equals(other.token), `divideByAmount token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        const frac = this.divide(other);\n        return new percent_1.Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n    divideBy(other) {\n        const frac = this.divide(other);\n        return new percent_1.Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Multiplies this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n    multiplyBy(percent) {\n        return new TokenAmount(this.token, percent.asFraction.multiply(this.raw).toFixed(0));\n    }\n    /**\n     * Reduces this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n    reduceBy(percent) {\n        return this.multiplyBy(new percent_1.Percent(1, 1).subtract(percent));\n    }\n    /**\n     * Formats this number using Intl.NumberFormatOptions\n     * @param param0\n     * @returns\n     */\n    format({ numberFormatOptions, locale } = {}) {\n        const asExactString = this.toFixed(this.token.decimals);\n        const asNumber = parseFloat(asExactString);\n        return `${numberFormatOptions !== undefined\n            ? asNumber.toLocaleString(locale, numberFormatOptions)\n            : stripTrailingZeroes(asExactString)}`;\n    }\n    /**\n     * Returns true if the other object is a {@link TokenAmount}.\n     *\n     * @param other\n     * @returns\n     */\n    static isTokenAmount(other) {\n        var _a;\n        return (fraction_1.Fraction.isFraction(other) &&\n            !!((_a = other) === null || _a === void 0 ? void 0 : _a.token));\n    }\n}\nexports.TokenAmount = TokenAmount;\n//# sourceMappingURL=tokenAmount.js.map"]},"metadata":{},"sourceType":"script"}