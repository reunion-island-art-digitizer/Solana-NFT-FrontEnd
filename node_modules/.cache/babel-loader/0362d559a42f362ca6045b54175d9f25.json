{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness\n      };\n    }\n  }\n\n  var hue;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    lightness: lightness\n  };\n}\n\nvar _default = rgbToHsl;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/polished/lib/internalHelpers/_rgbToHsl.js"],"names":["exports","__esModule","rgbToHsl","color","red","green","blue","max","Math","min","lightness","alpha","undefined","hue","saturation","delta","_default","module","default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,MAAIC,GAAG,GAAGD,KAAK,CAACC,GAAN,GAAY,GAAtB;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACE,KAAN,GAAc,GAA1B;AACA,MAAIC,IAAI,GAAGH,KAAK,CAACG,IAAN,GAAa,GAAxB;AACA,MAAIC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASH,GAAT,EAAcC,KAAd,EAAqBC,IAArB,CAAV;AACA,MAAIG,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASL,GAAT,EAAcC,KAAd,EAAqBC,IAArB,CAAV;AACA,MAAII,SAAS,GAAG,CAACH,GAAG,GAAGE,GAAP,IAAc,CAA9B;;AAEA,MAAIF,GAAG,KAAKE,GAAZ,EAAiB;AACf;AACA,QAAIN,KAAK,CAACQ,KAAN,KAAgBC,SAApB,EAA+B;AAC7B,aAAO;AACLC,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLJ,QAAAA,SAAS,EAAEA,SAHN;AAILC,QAAAA,KAAK,EAAER,KAAK,CAACQ;AAJR,OAAP;AAMD,KAPD,MAOO;AACL,aAAO;AACLE,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLJ,QAAAA,SAAS,EAAEA;AAHN,OAAP;AAKD;AACF;;AAED,MAAIG,GAAJ;AACA,MAAIE,KAAK,GAAGR,GAAG,GAAGE,GAAlB;AACA,MAAIK,UAAU,GAAGJ,SAAS,GAAG,GAAZ,GAAkBK,KAAK,IAAI,IAAIR,GAAJ,GAAUE,GAAd,CAAvB,GAA4CM,KAAK,IAAIR,GAAG,GAAGE,GAAV,CAAlE;;AAEA,UAAQF,GAAR;AACE,SAAKH,GAAL;AACES,MAAAA,GAAG,GAAG,CAACR,KAAK,GAAGC,IAAT,IAAiBS,KAAjB,IAA0BV,KAAK,GAAGC,IAAR,GAAe,CAAf,GAAmB,CAA7C,CAAN;AACA;;AAEF,SAAKD,KAAL;AACEQ,MAAAA,GAAG,GAAG,CAACP,IAAI,GAAGF,GAAR,IAAeW,KAAf,GAAuB,CAA7B;AACA;;AAEF;AACE;AACAF,MAAAA,GAAG,GAAG,CAACT,GAAG,GAAGC,KAAP,IAAgBU,KAAhB,GAAwB,CAA9B;AACA;AAZJ;;AAeAF,EAAAA,GAAG,IAAI,EAAP;;AAEA,MAAIV,KAAK,CAACQ,KAAN,KAAgBC,SAApB,EAA+B;AAC7B,WAAO;AACLC,MAAAA,GAAG,EAAEA,GADA;AAELC,MAAAA,UAAU,EAAEA,UAFP;AAGLJ,MAAAA,SAAS,EAAEA,SAHN;AAILC,MAAAA,KAAK,EAAER,KAAK,CAACQ;AAJR,KAAP;AAMD;;AAED,SAAO;AACLE,IAAAA,GAAG,EAAEA,GADA;AAELC,IAAAA,UAAU,EAAEA,UAFP;AAGLJ,IAAAA,SAAS,EAAEA;AAHN,GAAP;AAKD;;AAED,IAAIM,QAAQ,GAAGd,QAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBgB,QAArB;AACAC,MAAM,CAACjB,OAAP,GAAiBA,OAAO,CAACkB,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness\n      };\n    }\n  }\n\n  var hue;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    lightness: lightness\n  };\n}\n\nvar _default = rgbToHsl;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}