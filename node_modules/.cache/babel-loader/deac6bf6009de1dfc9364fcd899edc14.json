{"ast":null,"code":"\"use strict\";\n\nvar _wrapNativeSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/piroi16/Documents/GitHub/Solana-NFT-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LedgerError = exports.LedgerWalletAdapter = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar hw_transport_webusb_1 = (0, tslib_1.__importDefault)(require(\"@ledgerhq/hw-transport-webusb\"));\nvar eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\n\nvar types_1 = require(\"../types\");\n\nvar core_1 = require(\"./core\");\n\nvar DEFAULT_DERIVATION_PATH = (0, core_1.getSolanaDerivationPath)();\n\nvar LedgerWalletAdapter = /*#__PURE__*/function (_eventemitter3_1$defa) {\n  _inherits(LedgerWalletAdapter, _eventemitter3_1$defa);\n\n  var _super = _createSuper(LedgerWalletAdapter);\n\n  function LedgerWalletAdapter() {\n    var _this;\n\n    _classCallCheck(this, LedgerWalletAdapter);\n\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._publicKey = null;\n    _this._transport = null;\n    _this._derivationPath = DEFAULT_DERIVATION_PATH;\n    return _this;\n  }\n\n  _createClass(LedgerWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, i, transaction, signed;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = [];\n                i = 0;\n\n              case 2:\n                if (!(i < transactions.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                transaction = transactions[i];\n\n                if (!transaction) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.signTransaction(transaction);\n\n              case 7:\n                signed = _context.sent;\n                result.push(signed);\n\n              case 9:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 12:\n                return _context.abrupt(\"return\", result);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var signature;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this._transport || !this._publicKey)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Not connected to Ledger\");\n\n              case 2:\n                _context2.next = 4;\n                return (0, core_1.signTransaction)(this._transport, transaction, this._derivationPath);\n\n              case 4:\n                signature = _context2.sent;\n                transaction.addSignature(this._publicKey, signature);\n                return _context2.abrupt(\"return\", transaction);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(args) {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var account, change;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._connecting) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                this._connecting = true;\n                _context3.prev = 3;\n                _context3.next = 6;\n                return hw_transport_webusb_1.default.create();\n\n              case 6:\n                this._transport = _context3.sent;\n\n                if (!args) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                account = args.account, change = args.change;\n                this._derivationPath = (0, core_1.getSolanaDerivationPath)(account, change);\n                _context3.next = 12;\n                return (0, core_1.getPublicKey)(this._transport, this._derivationPath);\n\n              case 12:\n                this._publicKey = _context3.sent;\n                _context3.next = 18;\n                break;\n\n              case 15:\n                _context3.next = 17;\n                return (0, core_1.getPublicKey)(this._transport);\n\n              case 17:\n                this._publicKey = _context3.sent;\n\n              case 18:\n                this.emit(\"connect\", this._publicKey);\n                _context3.next = 26;\n                break;\n\n              case 21:\n                _context3.prev = 21;\n                _context3.t0 = _context3[\"catch\"](3);\n                _context3.next = 25;\n                return this.disconnect();\n\n              case 25:\n                throw new LedgerError(_context3.t0);\n\n              case 26:\n                _context3.prev = 26;\n                this._connecting = false;\n                return _context3.finish(26);\n\n              case 29:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 21, 26, 29]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var emit;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                emit = false;\n\n                if (!this._transport) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _context4.next = 4;\n                return this._transport.close();\n\n              case 4:\n                this._transport = null;\n                emit = true;\n\n              case 6:\n                this._connecting = false;\n                this._publicKey = null;\n\n                if (emit) {\n                  this.emit(\"disconnect\");\n                }\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n    /**\n     * Ledger transport.\n     */\n\n  }, {\n    key: \"transport\",\n    get: function get() {\n      return this._transport;\n    }\n    /**\n     * Fetches accounts associated with the given derivation paths.\n     *\n     * @param paths\n     * @returns\n     */\n\n  }], [{\n    key: \"fetchAccountsForPaths\",\n    value: function fetchAccountsForPaths(paths) {\n      return (0, tslib_1.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var transport, ret, _iterator, _step, path, derivationPath;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                transport = null;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return hw_transport_webusb_1.default.create();\n\n              case 4:\n                transport = _context5.sent;\n                ret = [];\n                _iterator = _createForOfIteratorHelper(paths);\n                _context5.prev = 7;\n\n                _iterator.s();\n\n              case 9:\n                if ((_step = _iterator.n()).done) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                path = _step.value;\n                derivationPath = (0, core_1.getSolanaDerivationPath)(path.account, path.change);\n                _context5.t0 = ret;\n                _context5.t1 = Object;\n                _context5.t2 = Object.assign({}, path);\n                _context5.next = 17;\n                return (0, core_1.getPublicKey)(transport, derivationPath);\n\n              case 17:\n                _context5.t3 = _context5.sent;\n                _context5.t4 = {\n                  key: _context5.t3\n                };\n                _context5.t5 = _context5.t1.assign.call(_context5.t1, _context5.t2, _context5.t4);\n\n                _context5.t0.push.call(_context5.t0, _context5.t5);\n\n              case 21:\n                _context5.next = 9;\n                break;\n\n              case 23:\n                _context5.next = 28;\n                break;\n\n              case 25:\n                _context5.prev = 25;\n                _context5.t6 = _context5[\"catch\"](7);\n\n                _iterator.e(_context5.t6);\n\n              case 28:\n                _context5.prev = 28;\n\n                _iterator.f();\n\n                return _context5.finish(28);\n\n              case 31:\n                return _context5.abrupt(\"return\", ret);\n\n              case 34:\n                _context5.prev = 34;\n                _context5.t7 = _context5[\"catch\"](1);\n                throw new LedgerError(_context5.t7);\n\n              case 37:\n                _context5.prev = 37;\n                _context5.next = 40;\n                return transport === null || transport === void 0 ? void 0 : transport.close();\n\n              case 40:\n                return _context5.finish(37);\n\n              case 41:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 34, 37, 41], [7, 25, 28, 31]]);\n      }));\n    }\n  }]);\n\n  return LedgerWalletAdapter;\n}(eventemitter3_1.default);\n\nexports.LedgerWalletAdapter = LedgerWalletAdapter;\n\nvar LedgerError = /*#__PURE__*/function (_Error) {\n  _inherits(LedgerError, _Error);\n\n  var _super2 = _createSuper(LedgerError);\n\n  function LedgerError(error) {\n    var _this2;\n\n    _classCallCheck(this, LedgerError);\n\n    _this2 = _super2.call(this, \"Ledger Error: \".concat(error.message));\n    _this2.name = \"LedgerError\";\n    return _this2;\n  }\n\n  return LedgerError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.LedgerError = LedgerError;","map":{"version":3,"sources":["../../../src/adapters/ledger/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LedgerError = exports.LedgerWalletAdapter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst hw_transport_webusb_1 = (0, tslib_1.__importDefault)(require(\"@ledgerhq/hw-transport-webusb\"));\nconst eventemitter3_1 = (0, tslib_1.__importDefault)(require(\"eventemitter3\"));\nconst types_1 = require(\"../types\");\nconst core_1 = require(\"./core\");\nconst DEFAULT_DERIVATION_PATH = (0, core_1.getSolanaDerivationPath)();\nclass LedgerWalletAdapter extends eventemitter3_1.default {\n    constructor() {\n        super();\n        this._connecting = false;\n        this._publicKey = null;\n        this._transport = null;\n        this._derivationPath = DEFAULT_DERIVATION_PATH;\n    }\n    get publicKey() {\n        return this._publicKey || types_1.DEFAULT_PUBLIC_KEY;\n    }\n    get connected() {\n        return this._publicKey !== null;\n    }\n    get autoApprove() {\n        return false;\n    }\n    signAllTransactions(transactions) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const result = [];\n            for (let i = 0; i < transactions.length; i++) {\n                const transaction = transactions[i];\n                if (transaction) {\n                    const signed = yield this.signTransaction(transaction);\n                    result.push(signed);\n                }\n            }\n            return result;\n        });\n    }\n    signTransaction(transaction) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._transport || !this._publicKey) {\n                throw new Error(\"Not connected to Ledger\");\n            }\n            const signature = yield (0, core_1.signTransaction)(this._transport, transaction, this._derivationPath);\n            transaction.addSignature(this._publicKey, signature);\n            return transaction;\n        });\n    }\n    connect(args) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (this._connecting) {\n                return;\n            }\n            this._connecting = true;\n            try {\n                // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n                this._transport = yield hw_transport_webusb_1.default.create();\n                if (args) {\n                    const { account, change } = args;\n                    this._derivationPath = (0, core_1.getSolanaDerivationPath)(account, change);\n                    this._publicKey = yield (0, core_1.getPublicKey)(this._transport, this._derivationPath);\n                }\n                else {\n                    this._publicKey = yield (0, core_1.getPublicKey)(this._transport);\n                }\n                this.emit(\"connect\", this._publicKey);\n            }\n            catch (error) {\n                yield this.disconnect();\n                throw new LedgerError(error);\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            let emit = false;\n            if (this._transport) {\n                yield this._transport.close();\n                this._transport = null;\n                emit = true;\n            }\n            this._connecting = false;\n            this._publicKey = null;\n            if (emit) {\n                this.emit(\"disconnect\");\n            }\n        });\n    }\n    /**\n     * Ledger transport.\n     */\n    get transport() {\n        return this._transport;\n    }\n    /**\n     * Fetches accounts associated with the given derivation paths.\n     *\n     * @param paths\n     * @returns\n     */\n    static fetchAccountsForPaths(paths) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            let transport = null;\n            try {\n                transport = yield hw_transport_webusb_1.default.create();\n                const ret = [];\n                for (const path of paths) {\n                    const derivationPath = (0, core_1.getSolanaDerivationPath)(path.account, path.change);\n                    ret.push(Object.assign(Object.assign({}, path), { key: yield (0, core_1.getPublicKey)(transport, derivationPath) }));\n                }\n                return ret;\n            }\n            catch (error) {\n                throw new LedgerError(error);\n            }\n            finally {\n                yield (transport === null || transport === void 0 ? void 0 : transport.close());\n            }\n        });\n    }\n}\nexports.LedgerWalletAdapter = LedgerWalletAdapter;\nclass LedgerError extends Error {\n    constructor(error) {\n        super(`Ledger Error: ${error.message}`);\n        this.name = \"LedgerError\";\n    }\n}\nexports.LedgerError = LedgerError;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}