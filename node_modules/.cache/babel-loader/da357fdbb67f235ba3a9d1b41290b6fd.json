{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSendConnection = exports.useConnection = exports.useConnectionContext = exports.useConnectedWallet = exports.useWallet = void 0;\n\nvar context_1 = require(\"./context\");\n/**\n * Gets the current Solana wallet.\n */\n\n\nfunction useWallet() {\n  var context = (0, context_1.useSolana)();\n\n  if (!context) {\n    throw new Error(\"wallet not loaded\");\n  }\n\n  return context;\n}\n\nexports.useWallet = useWallet;\n/**\n * Gets the current Solana wallet, returning null if it is not connected.\n */\n\nvar useConnectedWallet = function useConnectedWallet() {\n  var _useWallet = useWallet(),\n      wallet = _useWallet.wallet,\n      connected = _useWallet.connected;\n\n  if (!(wallet === null || wallet === void 0 ? void 0 : wallet.connected) || !connected || !wallet.publicKey) {\n    return null;\n  }\n\n  return wallet;\n};\n\nexports.useConnectedWallet = useConnectedWallet;\n/**\n * Loads the connection context\n * @returns\n */\n\nfunction useConnectionContext() {\n  var context = (0, context_1.useSolana)();\n\n  if (!context) {\n    throw new Error(\"Not in context\");\n  }\n\n  return context;\n}\n\nexports.useConnectionContext = useConnectionContext;\n/**\n * Gets the read connection\n * @returns\n */\n\nfunction useConnection() {\n  return useConnectionContext().connection;\n}\n\nexports.useConnection = useConnection;\n/**\n * Gets the send connection\n * @returns\n */\n\nfunction useSendConnection() {\n  return useConnectionContext().sendConnection;\n}\n\nexports.useSendConnection = useSendConnection;","map":{"version":3,"sources":["../src/hooks.ts"],"names":[],"mappings":";;;;;;;AAIA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAGA;;AAEG;;;AACH,SAAgB,SAAhB,GAAyB;AACvB,MAAM,OAAO,GAAG,CAAA,GAAA,SAAA,CAAA,SAAA,GAAhB;;AACA,MAAI,CAAC,OAAL,EAAc;AACZ,UAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,SAAO,OAAP;AACD;;AAND,OAAA,CAAA,SAAA,GAAA,SAAA;AAQA;;AAEG;;AACI,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAA6B;AAC7D,mBAA8B,SAAS,EAAvC;AAAA,MAAQ,MAAR,cAAQ,MAAR;AAAA,MAAgB,SAAhB,cAAgB,SAAhB;;AACA,MAAI,EAAC,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,SAAT,KAAsB,CAAC,SAAvB,IAAoC,CAAC,MAAM,CAAC,SAAhD,EAA2D;AACzD,WAAO,IAAP;AACD;;AACD,SAAO,MAAP;AACD,CANM;;AAAM,OAAA,CAAA,kBAAA,GAAkB,kBAAlB;AAQb;;;AAGG;;AACH,SAAgB,oBAAhB,GAAoC;AAClC,MAAM,OAAO,GAAG,CAAA,GAAA,SAAA,CAAA,SAAA,GAAhB;;AACA,MAAI,CAAC,OAAL,EAAc;AACZ,UAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACD,SAAO,OAAP;AACD;;AAND,OAAA,CAAA,oBAAA,GAAA,oBAAA;AAQA;;;AAGG;;AACH,SAAgB,aAAhB,GAA6B;AAC3B,SAAO,oBAAoB,GAAG,UAA9B;AACD;;AAFD,OAAA,CAAA,aAAA,GAAA,aAAA;AAIA;;;AAGG;;AACH,SAAgB,iBAAhB,GAAiC;AAC/B,SAAO,oBAAoB,GAAG,cAA9B;AACD;;AAFD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSendConnection = exports.useConnection = exports.useConnectionContext = exports.useConnectedWallet = exports.useWallet = void 0;\nconst context_1 = require(\"./context\");\n/**\n * Gets the current Solana wallet.\n */\nfunction useWallet() {\n    const context = (0, context_1.useSolana)();\n    if (!context) {\n        throw new Error(\"wallet not loaded\");\n    }\n    return context;\n}\nexports.useWallet = useWallet;\n/**\n * Gets the current Solana wallet, returning null if it is not connected.\n */\nconst useConnectedWallet = () => {\n    const { wallet, connected } = useWallet();\n    if (!(wallet === null || wallet === void 0 ? void 0 : wallet.connected) || !connected || !wallet.publicKey) {\n        return null;\n    }\n    return wallet;\n};\nexports.useConnectedWallet = useConnectedWallet;\n/**\n * Loads the connection context\n * @returns\n */\nfunction useConnectionContext() {\n    const context = (0, context_1.useSolana)();\n    if (!context) {\n        throw new Error(\"Not in context\");\n    }\n    return context;\n}\nexports.useConnectionContext = useConnectionContext;\n/**\n * Gets the read connection\n * @returns\n */\nfunction useConnection() {\n    return useConnectionContext().connection;\n}\nexports.useConnection = useConnection;\n/**\n * Gets the send connection\n * @returns\n */\nfunction useSendConnection() {\n    return useConnectionContext().sendConnection;\n}\nexports.useSendConnection = useSendConnection;\n//# sourceMappingURL=hooks.js.map"]},"metadata":{},"sourceType":"script"}