{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.u64 = exports.TOKEN_PROGRAM_ID = exports.SPLToken = exports.NATIVE_MINT = exports.ASSOCIATED_TOKEN_PROGRAM_ID = exports.ZERO = exports.validateU256 = exports.validateU64 = exports.TEN = exports.Rounding = exports.Percent = exports.parseBigintIsh = exports.ONE = exports.MAX_U256 = exports.MAX_U64 = exports.makeDecimalMultiplier = exports.Fraction = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\n(0, tslib_1.__exportStar)(require(\"./ata\"), exports);\n(0, tslib_1.__exportStar)(require(\"./instructions\"), exports);\n(0, tslib_1.__exportStar)(require(\"./layout\"), exports);\n(0, tslib_1.__exportStar)(require(\"./price\"), exports);\n(0, tslib_1.__exportStar)(require(\"./token\"), exports);\n(0, tslib_1.__exportStar)(require(\"./tokenAmount\"), exports); // re-export token-math types\n// so consumers don't need to use them\n\nvar token_math_1 = require(\"@ubeswap/token-math\");\n\nObject.defineProperty(exports, \"Fraction\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.Fraction;\n  }\n});\nObject.defineProperty(exports, \"makeDecimalMultiplier\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.makeDecimalMultiplier;\n  }\n});\nObject.defineProperty(exports, \"MAX_U64\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.MAX_U64;\n  }\n});\nObject.defineProperty(exports, \"MAX_U256\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.MAX_U256;\n  }\n});\nObject.defineProperty(exports, \"ONE\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.ONE;\n  }\n});\nObject.defineProperty(exports, \"parseBigintIsh\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.parseBigintIsh;\n  }\n});\nObject.defineProperty(exports, \"Percent\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.Percent;\n  }\n});\nObject.defineProperty(exports, \"Rounding\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.Rounding;\n  }\n});\nObject.defineProperty(exports, \"TEN\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.TEN;\n  }\n});\nObject.defineProperty(exports, \"validateU64\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.validateU64;\n  }\n});\nObject.defineProperty(exports, \"validateU256\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.validateU256;\n  }\n});\nObject.defineProperty(exports, \"ZERO\", {\n  enumerable: true,\n  get: function () {\n    return token_math_1.ZERO;\n  }\n}); // re-export SPL token types\n\n(0, tslib_1.__exportStar)(require(\"./common\"), exports);\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nObject.defineProperty(exports, \"ASSOCIATED_TOKEN_PROGRAM_ID\", {\n  enumerable: true,\n  get: function () {\n    return spl_token_1.ASSOCIATED_TOKEN_PROGRAM_ID;\n  }\n});\nObject.defineProperty(exports, \"NATIVE_MINT\", {\n  enumerable: true,\n  get: function () {\n    return spl_token_1.NATIVE_MINT;\n  }\n});\nObject.defineProperty(exports, \"SPLToken\", {\n  enumerable: true,\n  get: function () {\n    return spl_token_1.Token;\n  }\n});\nObject.defineProperty(exports, \"TOKEN_PROGRAM_ID\", {\n  enumerable: true,\n  get: function () {\n    return spl_token_1.TOKEN_PROGRAM_ID;\n  }\n});\nObject.defineProperty(exports, \"u64\", {\n  enumerable: true,\n  get: function () {\n    return spl_token_1.u64;\n  }\n});","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.u64 = exports.TOKEN_PROGRAM_ID = exports.SPLToken = exports.NATIVE_MINT = exports.ASSOCIATED_TOKEN_PROGRAM_ID = exports.ZERO = exports.validateU256 = exports.validateU64 = exports.TEN = exports.Rounding = exports.Percent = exports.parseBigintIsh = exports.ONE = exports.MAX_U256 = exports.MAX_U64 = exports.makeDecimalMultiplier = exports.Fraction = void 0;\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./ata\"), exports);\n(0, tslib_1.__exportStar)(require(\"./instructions\"), exports);\n(0, tslib_1.__exportStar)(require(\"./layout\"), exports);\n(0, tslib_1.__exportStar)(require(\"./price\"), exports);\n(0, tslib_1.__exportStar)(require(\"./token\"), exports);\n(0, tslib_1.__exportStar)(require(\"./tokenAmount\"), exports);\n// re-export token-math types\n// so consumers don't need to use them\nvar token_math_1 = require(\"@ubeswap/token-math\");\nObject.defineProperty(exports, \"Fraction\", { enumerable: true, get: function () { return token_math_1.Fraction; } });\nObject.defineProperty(exports, \"makeDecimalMultiplier\", { enumerable: true, get: function () { return token_math_1.makeDecimalMultiplier; } });\nObject.defineProperty(exports, \"MAX_U64\", { enumerable: true, get: function () { return token_math_1.MAX_U64; } });\nObject.defineProperty(exports, \"MAX_U256\", { enumerable: true, get: function () { return token_math_1.MAX_U256; } });\nObject.defineProperty(exports, \"ONE\", { enumerable: true, get: function () { return token_math_1.ONE; } });\nObject.defineProperty(exports, \"parseBigintIsh\", { enumerable: true, get: function () { return token_math_1.parseBigintIsh; } });\nObject.defineProperty(exports, \"Percent\", { enumerable: true, get: function () { return token_math_1.Percent; } });\nObject.defineProperty(exports, \"Rounding\", { enumerable: true, get: function () { return token_math_1.Rounding; } });\nObject.defineProperty(exports, \"TEN\", { enumerable: true, get: function () { return token_math_1.TEN; } });\nObject.defineProperty(exports, \"validateU64\", { enumerable: true, get: function () { return token_math_1.validateU64; } });\nObject.defineProperty(exports, \"validateU256\", { enumerable: true, get: function () { return token_math_1.validateU256; } });\nObject.defineProperty(exports, \"ZERO\", { enumerable: true, get: function () { return token_math_1.ZERO; } });\n// re-export SPL token types\n(0, tslib_1.__exportStar)(require(\"./common\"), exports);\nvar spl_token_1 = require(\"@solana/spl-token\");\nObject.defineProperty(exports, \"ASSOCIATED_TOKEN_PROGRAM_ID\", { enumerable: true, get: function () { return spl_token_1.ASSOCIATED_TOKEN_PROGRAM_ID; } });\nObject.defineProperty(exports, \"NATIVE_MINT\", { enumerable: true, get: function () { return spl_token_1.NATIVE_MINT; } });\nObject.defineProperty(exports, \"SPLToken\", { enumerable: true, get: function () { return spl_token_1.Token; } });\nObject.defineProperty(exports, \"TOKEN_PROGRAM_ID\", { enumerable: true, get: function () { return spl_token_1.TOKEN_PROGRAM_ID; } });\nObject.defineProperty(exports, \"u64\", { enumerable: true, get: function () { return spl_token_1.u64; } });\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}