import type { TransactionResponse, TransactionSignature } from "@solana/web3.js";
import type { Event, EventParser } from "../interfaces";
/**
 * A transaction that has been processed by the cluster.
 */
export declare class TransactionReceipt {
    /**
     * Signature (id) of the transaction.
     */
    readonly signature: TransactionSignature;
    /**
     * Raw response from web3.js
     */
    readonly response: TransactionResponse;
    constructor(
    /**
     * Signature (id) of the transaction.
     */
    signature: TransactionSignature, 
    /**
     * Raw response from web3.js
     */
    response: TransactionResponse);
    /**
     * Gets the events associated with this transaction.
     */
    getEvents<E extends Event>(eventParser: EventParser<E>): readonly E[];
    /**
     * Prints the logs associated with this transaction.
     */
    printLogs(): void;
    /**
     * Gets the compute units used by the transaction.
     * @returns
     */
    get computeUnits(): number;
}
//# sourceMappingURL=TransactionReceipt.d.ts.map